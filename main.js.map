{"version":3,"sources":["./src/app/authentication/change-password/services/change-password.service.ts","./src/app/core/services/browser-storage.service.ts","./src/app/core/services/app.config.ts","./src/app/core/services/auth.service.ts","./src/app/shared/directives/equal-validator.directive.ts","./src/environments/environment.ts","./src/app/core/component/header/header.component.ts","./src/app/core/component/header/header.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/app/core/services/xsrf.interceptor.ts","./src/app/core/models/auth-token-type.ts","./src/app/authentication/access-denied/access-denied.component.ts","./src/app/authentication/access-denied/access-denied.component.html","./src/app/core/services/utils.service.ts","./src/app/authentication/authentication.module.ts","./src/app/dashboard/dashboard-routing.module.ts","./src/app/shared/shared.module.ts","./src/app/core/services/refresh-token.service.ts","./src/app/shared/directives/is-visible-for-auth-user.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/dashboard/dashboard.module.ts","./src/app/shared/directives/has-auth-user-view-permission.directive.ts","./src/app/authentication/change-password/change-password.component.ts","./src/app/authentication/change-password/change-password.component.html","./src/app/app.module.ts","./src/app/core/services/auth.guard.ts","./src/app/dashboard/call-protected-api/call-protected-api.component.ts","./src/app/dashboard/call-protected-api/call-protected-api.component.html","./src/app/core/services/auth.interceptor.ts","./src/app/core/index.ts","./src/app/core/services/token-store.service.ts","./src/app/authentication/authentication-routing.module.ts","./src/app/core/services/api-config.service.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/core/services/dashboard.service.ts","./src/app/core/core.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/dashboard/protected-page/protected-page.component.ts","./src/app/dashboard/protected-page/protected-page.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qEAAkF;AAClF,8DAAmD;AACnD,0DAAmD;AACnD,qDAA8C;AAC9C,oEAAiD;;;AAIjD;IAGE,+BACU,IAAgB,EACI,SAAqB;QADzC,SAAI,GAAJ,IAAI,CAAY;QACI,cAAS,GAAT,SAAS,CAAY;IAAI,CAAC;IAExD,8CAAc,GAAd,UAAe,KAAqB;QAClC,IAAM,OAAO,GAAG,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,CAAC,WAAW,oBAAiB,CAAC;QAC3D,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACtC,IAAI,CACH,eAAG,CAAC,kBAAQ,IAAI,eAAQ,IAAI,EAAE,EAAd,CAAc,CAAC,EAC/B,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAC5D,CAAC;IACN,CAAC;8FAfU,qBAAqB,0CAItB,iBAAU;iEAJT,qBAAqB,WAArB,qBAAqB;gCATlC;CAyBC;AAhBY,sDAAqB;kDAArB,qBAAqB;cADjC,iBAAU;;sBAKN,aAAM;uBAAC,iBAAU;;;;;;;;;;;;;;;;;ACbtB,8DAA2C;;AAE3C;IAAA;KAwDC;IAnDC,0CAAU,GAAV,UAAW,GAAW;QACpB,IAAM,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,0CAAU,GAAV,UAAW,GAAW,EAAE,KAAU;QAChC,IAAM,IAAI,GAAG,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC9D,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,6CAAa,GAAb,UAAc,GAAW;QACvB,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,iDAAiB,GAAjB;QACE,KAAK,IAAM,GAAG,IAAI,MAAM,CAAC,cAAc,EAAE;YACvC,IAAI,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC7C,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;aACzB;SACF;IACH,CAAC;IAED,wCAAQ,GAAR,UAAS,GAAW;QAClB,IAAM,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC9C,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACzB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,wCAAQ,GAAR,UAAS,GAAW,EAAE,KAAU;QAC9B,IAAM,IAAI,GAAG,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC9D,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACzC,CAAC;IAED,2CAAW,GAAX,UAAY,GAAW;QACrB,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;IAED,+CAAe,GAAf;QACE,KAAK,IAAM,GAAG,IAAI,MAAM,CAAC,YAAY,EAAE;YACrC,IAAI,MAAM,CAAC,YAAY,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC3C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;aACvB;SACF;IACH,CAAC;8FApDU,qBAAqB;iEAArB,qBAAqB,WAArB,qBAAqB,mBAFpB,MAAM;gCAHpB;CA0DC;AArDY,sDAAqB;kDAArB,qBAAqB;cAHjC,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACJD,8DAA+C;AAEpC,kBAAU,GAAG,IAAI,qBAAc,CAAS,YAAY,CAAC,CAAC;AAQpD,iBAAS,GAAe;IACnC,WAAW,EAAE,0BAA0B;IACvC,eAAe,EAAE,aAAa;IAC9B,iBAAiB,EAAE,iBAAiB;CACrC,CAAC;;;;;;;;;;;;;;;;ACdF,qEAAkF;AAClF,8DAAmD;AACnD,kEAAyC;AACzC,qDAA+D;AAC/D,oEAA2D;AAE3D,uFAA4D;AAG5D,mFAAwD;AACxD,mEAAsD;AACtD,yFAA8D;AAC9D,qFAA0D;;;;;;;AAE1D;IAQE,qBACU,IAAgB,EAChB,MAAc,EACM,SAAqB,EACzC,gBAAkC,EAClC,iBAAoC,EACpC,mBAAwC;QALxC,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACM,cAAS,GAAT,SAAS,CAAY;QACzC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,wBAAmB,GAAnB,mBAAmB,CAAqB;QAT1C,qBAAgB,GAAG,IAAI,sBAAe,CAAU,KAAK,CAAC,CAAC;QAC/D,gBAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC;QAUjD,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE,KAAK,CAAC,CAAC;IAClF,CAAC;IAED,2BAAK,GAAL,UAAM,WAAwB;QAA9B,iBAsBC;QArBC,IAAM,OAAO,GAAG,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAI,IAAI,CAAC,SAAS,CAAC,WAAW,SAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAW,EACpF,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACnC,IAAI,CACH,eAAG,CAAC,UAAC,QAAa;YAChB,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,CAAC,KAAK,CAAC,iBAAiB,GAAG,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,oBAAoB;oBACxF,WAAW,GAAG,KAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,GAAG,yCAAyC,CAAC,CAAC;gBACvH,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,OAAO,KAAK,CAAC;aACd;YACD,KAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;YACnD,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC;YACvD,6DAA6D;YAC7D,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,EACF,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAC5D,CAAC;IACN,CAAC;IAED,yCAAmB,GAAnB;QACE,OAAO,IAAI,kBAAW,CAAC;YACrB,cAAc,EAAE,kBAAkB;YAClC,eAAe,EAAE,YAAU,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,+BAAa,CAAC,WAAW,CAAG;SAC/F,CAAC,CAAC;IACL,CAAC;IAED,4BAAM,GAAN,UAAO,cAAuB;QAA9B,iBAoBC;QAnBC,IAAM,OAAO,GAAG,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,IAAM,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,+BAAa,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5G,IAAI,CAAC,IAAI;aACN,GAAG,CAAI,IAAI,CAAC,SAAS,CAAC,WAAW,SAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,UAAU,sBAAiB,YAAc,EACjH,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aACtB,IAAI,CACH,eAAG,CAAC,kBAAQ,IAAI,eAAQ,IAAI,EAAE,EAAd,CAAc,CAAC,EAC/B,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,EAC3D,oBAAQ,CAAC;YACP,KAAI,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,CAAC;YAC1C,KAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YACtD,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,cAAc,EAAE;gBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;aACJ,SAAS,CAAC,gBAAM;YACf,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wCAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE;YAC7D,CAAC,IAAI,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,CAAC;IACxD,CAAC;IAED,iCAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;QAED,IAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;QACpE,IAAM,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC;QAC5D,OAAO,MAAM,CAAC,MAAM,CAAC;YACnB,MAAM,EAAE,YAAY,CAAC,sEAAsE,CAAC;YAC5F,QAAQ,EAAE,YAAY,CAAC,4DAA4D,CAAC;YACpF,WAAW,EAAE,YAAY,CAAC,aAAa,CAAC;YACxC,KAAK,EAAE,KAAK;SACb,CAAC,CAAC;IACL,CAAC;IAED,uCAAiB,GAAjB,UAAkB,aAAuB;QACvC,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAChC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACxB,OAAO,KAAK,CAAC;SACd;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE;YAC5F,OAAO,IAAI,CAAC,CAAC,mDAAmD;SACjE;QAED,OAAO,aAAa,CAAC,IAAI,CAAC,sBAAY;YACpC,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC;aAC5D;iBAAM;gBACL,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAgB,GAAhB,UAAiB,YAAoB;QACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IAChD,CAAC;IAEO,+CAAyB,GAAjC;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;IACxD,CAAC;0EAnHU,WAAW,kEAQZ,uBAAU;uDART,WAAW,WAAX,WAAW,mBAFV,MAAM;sBAfpB;CAqIC;AApHY,kCAAW;kDAAX,WAAW;cAHvB,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;sBASI,aAAM;uBAAC,uBAAU;;;;;;;;;;;;;;;;;ACzBtB,8DAAqD;AACrD,gEAA6F;;AAE7F;IAiBE,iCAA4C,gBAAwB;QAAxB,qBAAgB,GAAhB,gBAAgB,CAAQ;IAAI,CAAC;IAEzE,0CAAQ,GAAR,UAAS,OAAwB;QAC/B,IAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,IAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAE7D;;;;;UAKE;QAEF,IAAI,YAAY,IAAI,SAAS,KAAK,YAAY,CAAC,KAAK,EAAE;YACpD,OAAO;gBACL,gBAAgB,EAAE,IAAI,CAAC,yDAAyD;aACjF,CAAC;SACH;QAED,IACE,YAAY;YACZ,YAAY,CAAC,MAAM;YACnB,SAAS,KAAK,YAAY,CAAC,KAAK,EAChC;YACA,OAAO,YAAY,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;YAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;gBAC5C,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAC9B;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;kGAhCU,uBAAuB,uBACX,YAAY;gEADxB,uBAAuB,mMARvB;gBACT;oBACE,OAAO,EAAE,qBAAa;oBACtB,WAAW,EAAE,uBAAuB;oBACpC,KAAK,EAAE,IAAI,CAAC,mGAAmG;iBAChH;aACF;kCAjBH;CAoDC;AAjCY,0DAAuB;kDAAvB,uBAAuB;cAhBnC,gBAAS;eAAC;gBACT,kDAAkD;gBAClD,mGAAmG;gBACnG,oHAAoH;gBAEpH,mIAAmI;gBACnI,QAAQ,EACN,iGAAiG;gBACnG,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,qBAAa;wBACtB,WAAW,yBAAyB;wBACpC,KAAK,EAAE,IAAI,CAAC,mGAAmG;qBAChH;iBACF;aACF;;sBAEc,gBAAS;uBAAC,YAAY;;;;;;;;;;;;;;;ACpBrC,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;;;AAEnE,mBAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;ACPF,8DAA6D;AAG7D,oFAA0D;;;;;;;AAE1D;IAaE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN5C,UAAK,GAAG,WAAW,CAAC;QAEpB,eAAU,GAAG,KAAK,CAAC;QACnB,iBAAY,GAAwB,IAAI,CAAC;QACzC,gBAAW,GAAG,EAAE,CAAC;IAE+B,CAAC;IAEjD,kCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM;YAC/D,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;YACzB,IAAI,MAAM,EAAE;gBACV,IAAM,QAAQ,GAAG,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;gBAChD,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC;aACzD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAW,GAAX;QACE,kDAAkD;QAClD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;kFA7BU,eAAe;wDAAf,eAAe;YCV5B,8BACE;YAAA,8BACE;YAAA,8BACE;YAAA,8BACE;YAAA,4BAA+C;YAAA,0CAAK;YAAA,iBAAI;YACxD,4BAA4C;YAAA,qDAAO;YAAA,iBAAI;YACvD,4BACG;YAAA,2DAAQ;YAAA,iBACV;YACH,iBAAM;YACR,iBAAM;YACR,iBAAM;YACR,iBAAM;;YARoB,eAA2B;YAA3B,uDAA2B;YAC3B,eAAyB;YAAzB,uDAAyB;YACd,eAAiC;YAAjC,uDAAiC;;0BDNtE;CAwCC;AA9BY,0CAAe;kDAAf,eAAe;cAL3B,gBAAS;eAAC;gBACT,QAAQ,EAAE,YAAY;gBACtB,WAAW,EAAE,yBAAyB;gBACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC;;;;;;;;;;;;;;;;;AETD,8DAAkD;;AAElD;IAOE;IAAgB,CAAC;IAEjB,mCAAQ,GAAR;IACA,CAAC;oFALU,gBAAgB;yDAAhB,gBAAgB;YCP7B,0BAAI;YAAA,iQAAmD;YAAA,iBAAK;YAC5D,4BAAO;YAAA,sHAAqB;YAAA,iBAAO;;2BDDnC;CAcC;AAPY,4CAAgB;kDAAhB,gBAAgB;cAL5B,gBAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,SAAS,EAAE,CAAC,yBAAyB,CAAC;aACvC;;;;;;;;;;;;;;;;;AEND,qEAAoH;AACpH,8DAA2C;;;AAG3C;IAGE,yBAAoB,cAAsC;QAAtC,mBAAc,GAAd,cAAc,CAAwB;IAAI,CAAC;IAE/D,mCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QACpD;;;;;;;UAOE;QACF,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;YAC7B,IAAM,UAAU,GAAG,cAAc,CAAC;YAClC,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;YAC7C,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;gBAC7C,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;oBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC;iBAChD,CAAC,CAAC;aACJ;SACF;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;kFAvBU,eAAe;2DAAf,eAAe,WAAf,eAAe;0BAL5B;CA6BC;AAxBY,0CAAe;kDAAf,eAAe;cAD3B,iBAAU;;;;;;;;;;;;;;;;;ACJX,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,+DAAW;IACX,iEAAY;AACd,CAAC,EAHW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAGxB;;;;;;;;;;;;;;;;ACHD,kEAA2C;AAC3C,8DAAkD;AAClD,0DAAwC;;;;;;;ICMxC,iCAME;IAAA,wDACF;IAAA,iBAAS;;IAJP,uDAAyB;;ADP3B;IASE,+BACU,QAAkB,EAClB,WAAwB;QADxB,aAAQ,GAAR,QAAQ,CAAU;QAClB,gBAAW,GAAX,WAAW,CAAa;QAJlC,oBAAe,GAAG,KAAK,CAAC;IAMxB,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;IAC/D,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,6CAA6C;IACrE,CAAC;8FAhBU,qBAAqB;8DAArB,qBAAqB;YCTlC,6BACE;YAAA,uBAA4C;YAAC,8DAC/C;YAAA,iBAAK;YACL,yBAAG;YAAA,+KAAkC;YAAA,iBAAI;YACzC,iCACE;YAD8B,kGAAS,YAAQ,IAAC;YAChD,uBAAmD;YAAC,uBACtD;YAAA,iBAAS;YAET,4EAOS;;YANN,eAAsB;YAAtB,2CAAsB;;gCDTzB;CA0BC;AAjBY,sDAAqB;kDAArB,qBAAqB;cALjC,gBAAS;eAAC;gBACT,QAAQ,EAAE,mBAAmB;gBAC7B,WAAW,EAAE,gCAAgC;gBAC7C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;;;;;AERD,8DAA2C;AAE3C,6FAAkE;;;AAElE;IAKE,sBAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,oCAAa,GAAb,UAAc,KAAa;QACzB,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC;IACtC,CAAC;IAED,sCAAe,GAAf;QACE,IAAM,UAAU,GAAG,cAAc,CAAC;QAClC,IAAI,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC9D,IAAI,KAAK,EAAE;YACT,OAAO,KAAK,CAAC;SACd;QACD,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QACtB,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACzD,OAAO,KAAK,CAAC;IACf,CAAC;4EAjBU,YAAY;wDAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;uBALpB;CAyBC;AAlBY,oCAAY;kDAAZ,YAAY;cAHxB,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACND,kEAA+C;AAC/C,8DAAyC;AACzC,gEAA6C;AAC7C,mFAAyD;AAEzD,2GAAgF;AAChF,yGAA8E;AAC9E,iHAAsF;AACtF,sHAA2F;AAC3F,mFAAyD;;AAEzD;IAAA;KAUqC;4DAAxB,oBAAoB;2HAApB,oBAAoB,mBAFpB,CAAC,+CAAqB,CAAC,YAPzB;gBACP,qBAAY;gBACZ,mBAAW;gBACX,4BAAY;gBACZ,2DAA2B;aAC5B;+BAjBH;CAqBqC;AAAxB,oDAAoB;wFAApB,oBAAoB,mBAHhB,gCAAc,EAAE,+CAAqB,EAAE,mDAAuB,aAL3E,qBAAY;QACZ,mBAAW;QACX,4BAAY;QACZ,2DAA2B;kDAKlB,oBAAoB;cAVhC,eAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,qBAAY;oBACZ,mBAAW;oBACX,4BAAY;oBACZ,2DAA2B;iBAC5B;gBACD,YAAY,EAAE,CAAC,gCAAc,EAAE,+CAAqB,EAAE,mDAAuB,CAAC;gBAC9E,SAAS,EAAE,CAAC,+CAAqB,CAAC;aACnC;;;;;;;;;;;;;;;;;ACpBD,8DAAyC;AACzC,kEAAuD;AACvD,0DAA2D;AAE3D,0HAA8F;AAC9F,8GAAmF;;;AAEnF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,iDAAsB;QACjC,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,cAAc,EAAE,CAAC,OAAO,CAAC;aACH;SACzB;QACD,WAAW,EAAE,CAAC,gBAAS,CAAC;KACzB;IACD;QACE,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,wDAAyB;QACpC,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,cAAc,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;aACX;SACzB;QACD,WAAW,EAAE,CAAC,gBAAS,CAAC;KACzB;CACF,CAAC;AAEF;IAAA;KAIuC;8DAA1B,sBAAsB;+HAAtB,sBAAsB,kBAHxB,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,qBAAY;iCAhCxB;CAkCuC;AAA1B,wDAAsB;wFAAtB,sBAAsB,0CAFvB,qBAAY;kDAEX,sBAAsB;cAJlC,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;ACjCD,kEAA+C;AAC/C,qEAAwD;AACxD,8DAA8D;AAC9D,gEAA6C;AAE7C,4GAAiF;AACjF,wIAA0G;AAC1G,8HAAgG;;AAEhG;IAAA;KAkCC;IAPQ,oBAAO,GAAd;QACE,+EAA+E;QAC/E,OAAO;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,EAAE,EAAE,8EAA8E,CAAC;SAC7F,CAAC;IACJ,CAAC;oDAPU,YAAY;2GAAZ,YAAY,kBAzBd;gBACP,qBAAY;gBACZ,mBAAW;gBACX,uBAAgB;aACjB;YAWC,iHAAiH;YACjH,qBAAY;YACZ,mBAAW;YACX,uBAAgB;uBA5BpB;CA2CC;AARY,oCAAY;wFAAZ,YAAY;QAhBrB,iHAAiH;QACjH,kEAA6B;QAC7B,4EAAkC;QAClC,mDAAuB,aAXvB,qBAAY;QACZ,mBAAW;QACX,uBAAgB;QAYhB,iHAAiH;QACjH,qBAAY;QACZ,mBAAW;QACX,uBAAgB;QAChB,kEAA6B;QAC7B,4EAAkC;QAClC,mDAAuB;kDAId,YAAY;cA1BxB,eAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,qBAAY;oBACZ,mBAAW;oBACX,uBAAgB;iBACjB;gBACD,eAAe,EAAE;gBACf,sGAAsG;iBACvG;gBACD,YAAY,EAAE;oBACZ,iHAAiH;oBACjH,kEAA6B;oBAC7B,4EAAkC;oBAClC,mDAAuB;iBACxB;gBACD,OAAO,EAAE;oBACP,iHAAiH;oBACjH,qBAAY;oBACZ,mBAAW;oBACX,uBAAgB;oBAChB,kEAA6B;oBAC7B,4EAAkC;oBAClC,mDAAuB;iBACxB;gBACD,wEAAwE;aACzE;;;;;;;;;;;;;;;;;AClCD,qEAAkF;AAClF,8DAAmD;AACnD,qDAAuD;AACvD,oEAAiD;AAEjD,uFAA4D;AAC5D,mFAAwD;AACxD,mEAAsD;AACtD,6FAAkE;AAClE,qFAA0D;AAC1D,yEAA+C;;;;;;;AAE/C;IAQE,6BACU,iBAAoC,EAChB,SAAqB,EACzC,gBAAkC,EAClC,IAAgB,EAChB,qBAA4C,EAC5C,YAA0B;QAL1B,sBAAiB,GAAjB,iBAAiB,CAAmB;QAChB,cAAS,GAAT,SAAS,CAAY;QACzC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,SAAI,GAAJ,IAAI,CAAY;QAChB,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAT5B,6BAAwB,GAAG,+BAA+B,CAAC;QAC3D,6BAAwB,GAAwB,IAAI,CAAC;IAQrB,CAAC;IAEzC,kDAAoB,GAApB,UAAqB,kBAA2B,EAAE,eAAwB;QAA1E,iBA6BC;QA5BC,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,kBAAkB,EAAE;YACvB,OAAO;SACR;QAED,IAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,CAAC;QAC5E,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC,CAAC;SAClE;QACD,IAAM,YAAY,GAAG,UAAU,CAAC,OAAO,EAAE,CAAC;QAC1C,IAAM,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACpC,IAAM,YAAY,GAAG,IAAI,CAAC;QAC1B,mFAAmF;QACnF,IAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,YAAY,GAAG,MAAM,GAAG,YAAY,CAAC,CAAC;QAClF,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,YAAY,CAAC,CAAC;QACpE,IAAM,YAAY,GAAG,YAAK,CAAC,YAAY,CAAC,CAAC;QACzC,IAAI,CAAC,wBAAwB,GAAG,YAAY,CAAC,SAAS,CAAC;YACrD,IAAI,eAAe,IAAI,CAAC,KAAI,CAAC,sCAAsC,EAAE,EAAE;gBACrE,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;aACvC;iBAAM;gBACL,KAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;aACtD;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,eAAe,IAAI,CAAC,IAAI,CAAC,sCAAsC,EAAE,EAAE;YACrE,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACpC;IACH,CAAC;IAED,oDAAsB,GAAtB,UAAuB,qBAA8B;QACnD,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAE,CAAC;SAC7C;QAED,IAAI,qBAAqB,EAAE;YACzB,IAAI,CAAC,8BAA8B,EAAE,CAAC;SACvC;IACH,CAAC;IAED,oDAAsB,GAAtB;QACE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE;YACxC,OAAO;SACR;QAED,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACzD,IAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CACnD,IAAI,CAAC,wBAAwB,CAC9B,CAAC;QACF,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,KAAK,YAAY,EAAE;YACjD,IAAI,CAAC,2BAA2B,EAAE,CAAC;SACpC;IACH,CAAC;IAEO,0CAAY,GAApB,UAAqB,kBAA2B;QAAhD,iBAgBC;QAfC,IAAM,OAAO,GAAG,IAAI,kBAAW,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC,CAAC;QACxE,IAAM,KAAK,GAAG,EAAE,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,+BAAa,CAAC,YAAY,CAAC,EAAE,CAAC;QACnG,OAAO,IAAI,CAAC,IAAI;aACb,IAAI,CAAI,IAAI,CAAC,SAAS,CAAC,WAAW,SAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,gBAAkB,EAC3F,KAAK,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;aAC7B,IAAI,CACH,eAAG,CAAC,kBAAQ,IAAI,eAAQ,IAAI,EAAE,EAAd,CAAc,CAAC,EAC/B,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAC5D;aACA,SAAS,CAAC,gBAAM;YACf,OAAO,CAAC,GAAG,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC;YAC3C,KAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;YACjD,yCAAyC;YACzC,KAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,oEAAsC,GAA9C;QACE,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,EAAE;YACxC,OAAO,KAAK,CAAC,CAAC,iGAAiG;SAChH;QAED,IAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;QACzD,IAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;QACrF,OAAO,CAAC,GAAG,CAAC,yBAAyB,EAAE;YACrC,wBAAwB,EAAE,SAAS;YACnC,YAAY,EAAE,YAAY;SAC3B,CAAC,CAAC;QACH,IAAM,SAAS,GAAG,SAAS,IAAI,SAAS,CAAC,SAAS,KAAK,IAAI,IAAI,SAAS,CAAC,KAAK,KAAK,YAAY,CAAC;QAChG,IAAI,SAAS,EAAE;YACb,OAAO,CAAC,GAAG,CAAC,2EAAyE,SAAS,CAAC,KAAK,8BACrF,YAAY,MAAG,CAAC,CAAC;SACjC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEO,yDAA2B,GAAnC;QACE,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,EAC/D;YACE,SAAS,EAAE,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE;SAC3C,CAAC,CAAC;IACP,CAAC;IAEO,4DAA8B,GAAtC;QACE,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACxE,CAAC;IAEO,yDAA2B,GAAnC;QACE,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,EAAE;YACjE,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,CAAC,CAAC;SACV,CAAC,CAAC;IACL,CAAC;0FA1HU,mBAAmB,iDAOpB,uBAAU;+DAPT,mBAAmB,WAAnB,mBAAmB,mBAFlB,MAAM;8BAbpB;CA0IC;AA3HY,kDAAmB;kDAAnB,mBAAmB;cAH/B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;sBAQI,aAAM;uBAAC,uBAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBtB,8DAAgF;AAChF,0DAAwC;;;AAGxC;IASE,uCAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJ9D,iBAAY,GAAwB,IAAI,CAAC;QAExC,sBAAiB,GAAoB,IAAI,CAAC;IAEuB,CAAC;IAE3E,mDAAW,GAAX;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;IAED,gDAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC/D,CAAC;IAEO,wDAAgB,GAAxB,UAAyB,MAAe;QACtC,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5E,CAAC;8GAtBU,6BAA6B;sEAA7B,6BAA6B;wCAP1C;CA8BC;AAvBY,sEAA6B;kDAA7B,6BAA6B;cAHzC,gBAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;aACnC;uFAKU,iBAAiB;kBAAzB,YAAK;;;;;;;;;;;;;;;;;ACXR,8DAAuD;AACvD,yDAA+C;;;;;AAE/C;IAME,sBAAoB,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IAGhE,oCAAa,GADb;QAEE,sDAAsD;QACtD,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,EAAE,CAAC;IACpD,CAAC;IAGD,yCAAkB,GADlB;QAEE,MAAM;IACR,CAAC;4EAZU,YAAY;qDAAZ,YAAY;qGAAZ,yBACP,uHADO,8BACF;;YCTX,6BAAyB;YACzB,8BACE;YAAA,gCAA+B;YACjC,iBAAM;;uBDHN;CAqBC;AAbY,oCAAY;kDAAZ,YAAY;cALxB,gBAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;sEAKC,aAAa;kBADZ,mBAAY;mBAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;YAOzC,kBAAkB;kBADjB,mBAAY;mBAAC,qBAAqB,EAAE,CAAC,QAAQ,CAAC;;;;;;;;;;;;;;;;;AEjBjD,8DAAyC;AACzC,kEAA+C;AAE/C,iFAAuD;AACvD,0HAA8F;AAC9F,+FAAoE;AACpE,8GAAmF;;AAEnF;IAAA;KAQgC;uDAAnB,eAAe;iHAAf,eAAe,kBAPjB;gBACP,qBAAY;gBACZ,4BAAY;gBACZ,iDAAsB;aACvB;0BAbH;CAgBgC;AAAnB,0CAAe;wFAAf,eAAe,mBAFX,iDAAsB,EAAE,wDAAyB,aAJ9D,qBAAY;QACZ,4BAAY;QACZ,iDAAsB;kDAIb,eAAe;cAR3B,eAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,qBAAY;oBACZ,4BAAY;oBACZ,iDAAsB;iBACvB;gBACD,YAAY,EAAE,CAAC,iDAAsB,EAAE,wDAAyB,CAAC;aAClE;;;;;;;;;;;;;;;;;ACfD,8DAAmG;AACnG,0DAAwC;;;AAGxC;IAaE,qIAAqI;IACrI,4CACU,WAA6B,EAC7B,aAA+B,EAC/B,WAAwB;QAFxB,gBAAW,GAAX,WAAW,CAAkB;QAC7B,kBAAa,GAAb,aAAa,CAAkB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QAb1B,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAoB,IAAI,CAAC;QACtC,iBAAY,GAAwB,IAAI,CAAC;IAY7C,CAAC;IAVL,sBACI,yEAAyB;aAD7B,UAC8B,KAAsB;YAClD,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OAAA;IASD,qDAAQ,GAAR;QAAA,iBAGC;QAFC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,SAAS,CAAC,gBAAM,IAAI,YAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAA7B,CAA6B,CAAC,CAAC;QACpG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,wDAAW,GAAX;QACE,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;IACH,CAAC;IAEO,6DAAgB,GAAxB,UAAyB,MAAe;QACtC,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACtG,IAAI,SAAS,IAAI,MAAM,EAAE;YACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBACxD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;aACvB;SACF;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SAC5B;IACH,CAAC;wHAvCU,kCAAkC;2EAAlC,kCAAkC;6CAP/C;CA+CC;AAxCY,gFAAkC;kDAAlC,kCAAkC;cAH9C,gBAAS;eAAC;gBACT,QAAQ,EAAE,6BAA6B;aACxC;uHAOK,yBAAyB;kBAD5B,YAAK;;;;;;;;;;;;;;;;;ACXR,8DAAkD;AAElD,kEAAyC;AAGzC,sGAA2E;;;;;;;;ICMjE,wBAA4G;;;IAQ5G,wBAA4G;;;IAQ5G,wBAAgH;;;IAKlH,+BACE;IAAA,YACF;IAAA,iBAAM;;;IADJ,eACF;IADE,6CACF;;;IAQJ,+BACE;IAAA,yCACF;IAAA,iBAAM;;;IACN,+BACE;IAAA,YACF;IAAA,iBAAM;;;IADJ,eACF;IADE,kHACF;;;IACA,+BACE;IAAA,YACF;IAAA,iBAAM;;;IADJ,eACF;IADE,8GACF;;;IACA,+BACE;IAAA,YACF;IAAA,iBAAM;;;IADJ,eACF;IADE,8FACF;;;IACA,+BACE;IAAA,YACF;IAAA,iBAAM;;;IADJ,eACF;IADE,sEACF;;;IACA,+BACE;IAAA,oCACF;IAAA,iBAAM;;;IAlBR,2BACE;IAAA,8FAEM;IACN,8FAEM;IACN,8FAEM;IACN,8FAEM;IACN,8FAEM;IACN,8FAEM;IACR,iBAAM;;;IAlB6B,eAA0B;IAA1B,+CAA0B;IAG1B,eAA2B;IAA3B,gDAA2B;IAG3B,eAA2B;IAA3B,gDAA2B;IAG3B,eAAyB;IAAzB,8CAAyB;IAGzB,eAAiC;IAAjC,sDAAiC;IAGjC,eAAkC;IAAlC,uDAAkC;;;IAhBrE,wFAmBM;;;IAnBA,2DAAkC;;;ADlC1C;IAcE,iCAAoB,MAAc,EAAU,qBAA4C;QAApE,WAAM,GAAN,MAAM,CAAQ;QAAU,0BAAqB,GAArB,qBAAqB,CAAuB;QAPxF,UAAK,GAAG,EAAE,CAAC;QACX,UAAK,GAAmB;YACtB,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,eAAe,EAAE,EAAE;SACpB,CAAC;IAE0F,CAAC;IAE7F,0CAAQ,GAAR;IACA,CAAC;IAED,4CAAU,GAAV,UAAW,IAAY;QAAvB,iBAWC;QAVC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC;aAClD,SAAS,CAAC;YACT,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACrC,CAAC,EAAE,UAAC,KAAwB;YAC1B,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,KAAK,CAAC,CAAC;YAC7C,KAAI,CAAC,KAAK,GAAM,KAAK,CAAC,KAAK,YAAO,KAAK,CAAC,UAAU,UAAK,KAAK,CAAC,OAAS,CAAC;QACzE,CAAC,CAAC,CAAC;IACP,CAAC;kGAzBU,uBAAuB;gEAAvB,uBAAuB;;YCbpC,8BACE;YAAA,8BACE;YAAA,6BAAuB;YAAA,+BAAe;YAAA,iBAAK;YAC7C,iBAAM;YACN,8BACE;YAAA,8BACE;YAAA,kCAEE;YAFmB,yJAAU,mBAAgB,IAAC;YAE9C,8BACE;YAAA,gCAA6B;YAAA,iCAAgB;YAAA,iBAAQ;YACrD,qCAEA;YADgE,4JAA+B;YAD/F,iBAEA;YAAA,6FAA4G;YAC9G,iBAAM;YAEN,+BACE;YAAA,iCAA6B;YAAA,6BAAY;YAAA,iBAAQ;YACjD,sCAGA;YADgD,4JAA+B;YAF/E,iBAGA;YAAA,6FAA4G;YAC9G,iBAAM;YAEN,+BACE;YAAA,iCAA6B;YAAA,iCAAgB;YAAA,iBAAQ;YACrD,sCAGA;YAD4C,gKAAmC;YAF/E,iBAGA;YAAA,6FAAgH;YAClH,iBAAM;YAEN,mCAAwE;YAAA,uBAAM;YAAA,iBAAS;YAEvF,2EAEM;YACR,iBAAO;YACT,iBAAM;YACR,iBAAM;YACR,iBAAM;YAEN,4HAqBc;;;;;;;YApD6C,gBAA+D;YAA/D,wDAA+D;YAChD,+CAA+B;YAChF,eAA4C;YAA5C,sCAA4C;YAKV,eAA+D;YAA/D,wDAA+D;YAEhE,+CAA+B;YAChE,eAA4C;YAA5C,sCAA4C;YAKF,eAAuE;YAAvE,wDAAuE;YAEpF,mDAAmC;YAChE,eAA4C;YAA5C,sCAA4C;YAG7B,eAAyB;YAAzB,sCAAyB;YAEnD,eAAW;YAAX,gCAAW;;kCDjCzB;CAuCC;AA1BY,0DAAuB;kDAAvB,uBAAuB;cALnC,gBAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,iCAAiC,CAAC;aAC/C;;;;;;;;;;;;;;;;;AEZD,8DAAyC;AACzC,sFAA0D;AAE1D,mFAAwD;AACxD,yEAA+C;AAC/C,wGAA8E;AAC9E,0EAAgD;AAChD,yFAA+D;AAC/D,8GAAkF;AAClF,gFAAsD;AACtD,yFAA+D;;;AAE/D;IAAA;KAiB0B;iDAAb,SAAS,cAFR,4BAAY;qGAEb,SAAS,mBAHT,EAAE,YARJ;gBACP,gCAAa;gBACb,wBAAU;gBACV,4BAAY,CAAC,OAAO,EAAE;gBACtB,4CAAoB;gBACpB,kCAAe;gBACf,qCAAgB;aACjB;oBAzBH;CA6B0B;AAAb,8BAAS;wFAAT,SAAS,mBAflB,4BAAY;QACZ,oCAAgB;QAChB,gDAAqB,aAGrB,gCAAa;QACb,wBAAU,mBAEV,4CAAoB;QACpB,kCAAe;QACf,qCAAgB;kDAKP,SAAS;cAjBrB,eAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4BAAY;oBACZ,oCAAgB;oBAChB,gDAAqB;iBACtB;gBACD,OAAO,EAAE;oBACP,gCAAa;oBACb,wBAAU;oBACV,4BAAY,CAAC,OAAO,EAAE;oBACtB,4CAAoB;oBACpB,kCAAe;oBACf,qCAAgB;iBACjB;gBACD,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,4BAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;AC5BD,8DAA2C;AAC3C,kEASyB;AAGzB,uEAA6C;;;;AAE7C;IAOE,mBAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF5D,wBAAmB,GAAG,YAAY,CAAC;IAE6B,CAAC;IAEzE,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACnE,IAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAwB,CAAC;QACnF,IAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;QAC5B,OAAO,IAAI,CAAC,4BAA4B,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IAED,oCAAgB,GAAhB,UAAiB,UAAkC,EAAE,KAA0B;QAC7E,IAAM,cAAc,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAwB,CAAC;QACxF,IAAM,SAAS,GAAG,KAAK,CAAC,GAAG,CAAC;QAC5B,OAAO,IAAI,CAAC,4BAA4B,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IAED,2BAAO,GAAP,UAAQ,KAAY;QAClB,IAAI,KAAK,CAAC,IAAI,EAAE;YACd,IAAM,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAwB,CAAC;YACnF,IAAM,SAAS,GAAG,MAAI,KAAK,CAAC,IAAM,CAAC;YACnC,OAAO,IAAI,CAAC,4BAA4B,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;SACrE;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAEO,gDAA4B,GAApC,UAAqC,cAAoB,EAAE,SAAiB;QAC1E,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE;YAC1C,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YAC7F,MAAM,IAAI,KAAK,CAAC,kEAAkE,CAAC,CAAC;SACrF;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;YAChD,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;YACnF,IAAI,QAAQ,EAAE;gBACZ,OAAO,IAAI,CAAC;aACb;YAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;YAC7C,IAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;YAChF,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,IAAI,CAAC;aACb;YAED,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEO,oCAAgB,GAAxB,UAAyB,SAAiB;QACxC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IACrF,CAAC;sEAnEU,SAAS;qDAAT,SAAS,WAAT,SAAS,mBAFR,MAAM;oBAhBpB;CAsFC;AApEY,8BAAS;kDAAT,SAAS;cAHrB,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACjBD,qEAAqE;AACrE,8DAA0D;AAC1D,0DAAgE;AAChE,qDAAkC;AAClC,oEAAiD;;;;;;;;;ICC7C,kCACE;IAD8C,qNAA6C;IAC3F,yDACF;IAAA,iBAAS;;;;IAET,kCACE;IADwD,gNAAwC;IAChG,sCACF;IAAA,iBAAS;;;IAMT,+BACE;IAAA,2BAAK;IAAA,4BAAM;IAAA,YAAiB;;IAAA,iBAAO;IAAA,iBAAM;IAC3C,iBAAM;;;IADO,eAAiB;IAAjB,yDAAiB;;;IA2B5B,+BACE;IAAA,iDACF;IAAA,iBAAM;;;IACN,+BACE;IAAA,iEACF;IAAA,iBAAM;;;AD5CZ;IAWE,mCACU,WAAwB,EACxB,UAAsB,EACF,SAAqB;QAFzC,gBAAW,GAAX,WAAW,CAAa;QACxB,eAAU,GAAV,UAAU,CAAY;QACF,cAAS,GAAT,SAAS,CAAY;QAPnD,YAAO,GAAG,KAAK,CAAC;QAChB,WAAM,GAAG,KAAK,CAAC;IAOX,CAAC;IAEL,4CAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QAC1D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAC1D,CAAC;IAED,qEAAiC,GAAjC;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU;aACZ,GAAG,CAAI,IAAI,CAAC,SAAS,CAAC,WAAW,yBAAsB,CAAC;aACxD,IAAI,CACH,eAAG,CAAC,kBAAQ,IAAI,eAAQ,IAAI,EAAE,EAAd,CAAc,CAAC,EAC/B,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAC5D;aACA,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gEAA4B,GAA5B;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU;aACZ,GAAG,CAAI,IAAI,CAAC,SAAS,CAAC,WAAW,oBAAiB,CAAC;aACnD,IAAI,CACH,eAAG,CAAC,kBAAQ,IAAI,eAAQ,IAAI,EAAE,EAAd,CAAc,CAAC,EAC/B,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAC5D;aACA,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uEAAmC,GAAnC;QAAA,iBAUC;QATC,IAAI,CAAC,UAAU;aACZ,GAAG,CAAI,IAAI,CAAC,SAAS,CAAC,WAAW,2BAAwB,CAAC;aAC1D,IAAI,CACH,eAAG,CAAC,kBAAQ,IAAI,eAAQ,IAAI,EAAE,EAAd,CAAc,CAAC,EAC/B,sBAAU,CAAC,UAAC,KAAwB,IAAK,wBAAU,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAAC,CAC5D;aACA,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;sGAnDU,yBAAyB,kGAS1B,iBAAU;kEATT,yBAAyB;YCXtC,8BACE;YAAA,8BACE;YAAA,6BAAuB;YAAA,kCAAkB;YAAA,iBAAK;YAChD,iBAAM;YACN,8BACE;YAAA,gFAES;YAET,gFAES;YAET,iCACE;YAD8B,sGAAS,yCAAqC,IAAC;YAC7E,0DACF;YAAA,iBAAS;YAET,0EAEM;YACR,iBAAM;YACR,iBAAM;YAEN,+BACE;YAAA,+BACE;YAAA,+BACE;YAAA,8BAAuB;YAAA,wEAAuD;YAAA,iBAAK;YACrF,iBAAM;YACN,+BACE;YAAA,+BACE;YAAA,0CACF;YAAA,iBAAM;YACN,gCACE;YAAA,0DACF;YAAA,iBAAM;YACR,iBAAM;YACR,iBAAM;YACR,iBAAM;YAEN,+BACE;YAAA,+BACE;YAAA,+BACE;YAAA,8BAAuB;YAAA,8EAA6D;YAAA,iBAAK;YAC3F,iBAAM;YACN,+BACE;YAAA,6EAEM;YACN,6EAEM;YACR,iBAAM;YACR,iBAAM;YACR,iBAAM;;YAhDO,eAAa;YAAb,kCAAa;YAIb,eAAuB;YAAvB,gDAAuB;YAQ1B,eAAY;YAAZ,iCAAY;YAesC,eAAsC;YAAtC,8DAAsC;YAgB1D,eAA2C;YAA3C,sEAA2C;;oCDhDnF;CA+DC;AApDY,8DAAyB;kDAAzB,yBAAyB;cALrC,gBAAS;eAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,WAAW,EAAE,qCAAqC;gBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;sBAUI,aAAM;uBAAC,iBAAU;;;;;;;;;;;;;;;;;AEnBtB,8DAA2C;AAC3C,kEAAyC;AACzC,qDAAkD;AAClD,oEAA8E;AAE9E,uFAA4D;AAC5D,qFAA0D;;;;AAE1D;IAOE,yBACU,iBAAoC,EACpC,MAAc;QADd,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QANhB,0BAAqB,GAAG,IAAI,CAAC;QAC7B,oBAAe,GAAG,CAAC,CAAC;QACpB,wBAAmB,GAAG,eAAe,CAAC;IAIlB,CAAC;IAE7B,mCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBA0CC;QAzCC,IAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC;QACtF,IAAI,WAAW,EAAE;YACf,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,YAAU,WAAa,CAAC;aAChF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,qBAAS,CAAC,gBAAM,IAAI,aAAM,CAAC,IAAI,CAC7B,oBAAQ,CAAC,UAAC,KAAwB,EAAE,YAAoB;gBACtD,IAAI,YAAY,KAAK,KAAI,CAAC,eAAe,GAAG,CAAC,EAAE;oBAC7C,OAAO,CAAC,GAAG,CAAC,gBAAc,OAAO,CAAC,MAAM,SAAI,OAAO,CAAC,GAAG,uBAAkB,KAAI,CAAC,eAAe,cAAW,CAAC,CAAC;oBAC1G,OAAO,iBAAU,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW;iBACtC;gBAED,QAAQ,KAAK,CAAC,MAAM,EAAE;oBACpB,KAAK,GAAG,CAAC;oBACT,KAAK,GAAG;wBACN,OAAO,iBAAU,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW;iBACxC;gBAED,OAAO,SAAE,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ;YAC5B,CAAC,CAAC,EACF,iBAAK,CAAC,KAAI,CAAC,qBAAqB,CAAC,EACjC,gBAAI,CAAC,KAAI,CAAC,eAAe,CAAC,CAC3B,EAjBmB,CAiBnB,CAAC,EACF,sBAAU,CAAC,UAAC,KAAU,EAAE,MAAkC;gBACxD,OAAO,CAAC,KAAK,CAAC,EAAE,KAAK,SAAE,MAAM,UAAE,CAAC,CAAC;gBACjC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;oBAChD,IAAM,UAAU,GAAG,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;oBACnD,IAAI,UAAU,EAAE;wBACd,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;wBACvC,OAAO,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;qBAChC;oBACD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;iBACzC;gBACD,OAAO,iBAAU,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC,CAAC,CACH,CAAC;SACH;aAAM;YACL,aAAa;YACb,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC7B;IACH,CAAC;IAED,2CAAiB,GAAjB,UAAkB,OAAyB;QACzC,IAAM,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC;QACzF,IAAM,wBAAwB,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;QAC/E,IAAI,CAAC,cAAc,IAAI,CAAC,wBAAwB,EAAE;YAChD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,cAAc,EAAE,cAAc,EAAE,CAAC,CAAC;YACpI,OAAO,IAAI,CAAC;SACb;QACD,IAAM,oBAAoB,GAAG,YAAU,cAAgB,CAAC;QACxD,IAAI,wBAAwB,KAAK,oBAAoB,EAAE;YACrD,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,EAAE,wBAAwB,EAAE,wBAAwB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,CAAC,CAAC;YAChJ,OAAO,IAAI,CAAC;SACb;QACD,OAAO,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,EAAE,CAAC,CAAC;IACzG,CAAC;kFAnEU,eAAe;2DAAf,eAAe,WAAf,eAAe;0BAV5B;CA8EC;AApEY,0CAAe;kDAAf,eAAe;cAD3B,iBAAU;;;;;;;;;;;;;;;;;;;;;;;;;;ACTX,yFAA+C;AAC/C,mFAAyC;AACzC,6EAAmC;AACnC,+EAAqC;AAErC,wFAA8C;AAC9C,gFAAsC;AACtC,gFAAsC;AACtC,kFAAwC;AACxC,6FAAmD;AACnD,2FAAiD;AACjD,yFAA+C;AAC/C,mFAAyC;;;;;;;;;;;;;;;;ACZzC,8DAA2C;AAC3C,iEAAoC;AAEpC,uFAA4D;AAC5D,mFAAwD;AACxD,6FAAkE;AAClE,yEAA+C;;;;;AAE/C;IAOE,2BACU,qBAA4C,EAC5C,YAA0B,EAC1B,gBAAkC;QAFlC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QALpC,oBAAe,GAAG,kBAAkB,CAAC;IAKG,CAAC;IAEjD,2CAAe,GAAf,UAAgB,SAAwB;QACtC,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,+BAAa,CAAC,SAAS,CAAC,CAAC,CAAC;SACtE;aAAM;YACL,OAAO,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,+BAAa,CAAC,SAAS,CAAC,CAAC,CAAC;SACxE;IACH,CAAC;IAED,iDAAqB,GAArB;QACE,OAAO,oBAAU,CAAC,IAAI,CAAC,eAAe,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,kDAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,qBAAqB,EAAE,CAAC,WAAW,CAAC;IAClD,CAAC;IAED,2DAA+B,GAA/B;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7C,IAAI,OAAO,CAAC,GAAG,KAAK,SAAS,EAAE;YAC7B,OAAO,IAAI,CAAC;SACb;QACD,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,mCAAmC;QAC7D,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,qDAAyB,GAAzB;QACE,IAAM,iBAAiB,GAAG,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACjE,IAAI,CAAC,iBAAiB,EAAE;YACtB,OAAO,IAAI,CAAC;SACb;QACD,OAAO,CAAC,CAAC,iBAAiB,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,4CAAgB,GAAhB;QACE,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,+BAAa,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,+BAAa,CAAC,+BAAa,CAAC,YAAY,CAAC,CAAC,CAAC;SACnF;aAAM;YACL,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,+BAAa,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC,CAAC;YACnF,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,+BAAa,CAAC,+BAAa,CAAC,YAAY,CAAC,CAAC,CAAC;SACrF;QACD,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC/D,CAAC;IAED,oCAAQ,GAAR,UAAS,SAAwB,EAAE,UAAkB;QACnD,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;YAC/C,OAAO,CAAC,KAAK,CAAI,+BAAa,CAAC,SAAS,CAAC,uBAAoB,CAAC,CAAC;SAChE;QAED,IAAI,SAAS,KAAK,+BAAa,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;YAC1F,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;SACxD;QAED,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;YACrB,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,+BAAa,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC;SAC3E;aAAM;YACL,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,+BAAa,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,CAAC;SAC7E;IACH,CAAC;IAED,gDAAoB,GAApB;QACE,IAAM,YAAY,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAClD,IAAM,KAAK,GAAG,YAAY,CAAC,8DAA8D,CAAC,CAAC;QAC3F,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QAED,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,KAAK,CAAC,GAAG,CAAC,cAAI,IAAI,WAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;SAC9C;aAAM;YACL,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,6CAAiB,GAAjB,UAAkB,QAAa;QAC7B,IAAI,CAAC,QAAQ,CAAC,+BAAa,CAAC,WAAW,EAAE,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAC7G,IAAI,CAAC,QAAQ,CAAC,+BAAa,CAAC,YAAY,EAAE,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACjH,CAAC;IAED,sCAAU,GAAV;QACE,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC;IAC5E,CAAC;IAED,yCAAa,GAAb,UAAc,KAAc;QAC1B,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IACnE,CAAC;IAED,2DAA+B,GAA/B;QACE,IAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,+BAAa,CAAC,WAAW,CAAC,CAAC;QACpE,IAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,+BAAa,CAAC,YAAY,CAAC,CAAC;QACtE,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACzG,CAAC;sFArGU,iBAAiB;6DAAjB,iBAAiB,WAAjB,iBAAiB,mBAFhB,MAAM;4BATpB;CAiHC;AAtGY,8CAAiB;kDAAjB,iBAAiB;cAH7B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD,8DAAyC;AACzC,kEAAuD;AACvD,0DAA2D;AAE3D,2GAAgF;AAChF,iHAAsF;AACtF,mFAAyD;;;AAEzD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,gCAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,+CAAqB,EAAE;IAC1D;QACE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,mDAAuB;QAC1D,IAAI,EAAE;YACJ,UAAU,EAAE;gBACV,cAAc,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;aACX;SACzB;QACD,WAAW,EAAE,CAAC,gBAAS,CAAC;KACzB;CACF,CAAC;AAEF;IAAA;KAI4C;mEAA/B,2BAA2B;yIAA3B,2BAA2B,kBAH7B,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,qBAAY;sCAxBxB;CA0B4C;AAA/B,kEAA2B;wFAA3B,2BAA2B,0CAF5B,qBAAY;kDAEX,2BAA2B;cAJvC,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB;;;;;;;;;;;;;;;;;ACzBD,8DAA2C;;AAG3C;IAOE;QAFQ,WAAM,GAAsB,IAAI,CAAC;IAEzB,CAAC;IAEjB,wCAAa,GAAb;QACE,IAAI,CAAC,MAAM,GAAG;YACZ,SAAS,EAAE,uBAAuB;YAClC,aAAa,EAAE,OAAO;YACtB,oBAAoB,EAAE,aAAa;YACnC,qBAAqB,EAAE,cAAc;SAExB,CAAC;QAChB,OAAO,IAAI,CAAC,MAAM,CAAC;QAInB,0DAA0D;QAC1D,iFAAiF;QACjF,mCAAmC;QACnC,iBAAiB;QACjB,sBAAsB;QACtB,4BAA4B;QAC5B,6CAA6C;QAC7C,OAAO;QACP,oBAAoB;QACpB,gGAAgG;QAChG,kCAAkC;QAClC,QAAQ;IACV,CAAC;IAED,sBAAI,2CAAa;aAAjB;YACE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,kFAAkF,CAAC,CAAC;aACrG;YACD,OAAO,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;;;OAAA;oFArCU,gBAAgB;4DAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;2BAJpB;CA4CC;AAtCY,4CAAgB;kDAAhB,gBAAgB;cAH5B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;;;;ACJD,8DAAkD;AAElD,kEAAyD;AACzD,0DAAqD;;;;;AAErD;IAWE,wBACU,WAAwB,EACxB,MAAc,EACd,KAAqB;QAFrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAgB;QAP/B,UAAK,GAAgB,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;QACvE,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAkB,IAAI,CAAC;IAKG,CAAC;IAEpC,iCAAQ,GAAR;QACE,yBAAyB;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE/B,2CAA2C;QAC3C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;IAChE,CAAC;IAED,mCAAU,GAAV,UAAW,IAAY;QAAvB,iBAsBC;QArBC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAElB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aAC/B,SAAS,CAAC,oBAAU;YACnB,IAAI,UAAU,EAAE;gBACd,IAAI,KAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACxC;qBAAM;oBACL,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;iBAC1C;aACF;QACH,CAAC,EACC,UAAC,KAAwB;YACvB,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;YACpC,IAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE;gBACxB,KAAI,CAAC,KAAK,GAAG,kDAAkD,CAAC;aACjE;iBAAM;gBACL,KAAI,CAAC,KAAK,GAAM,KAAK,CAAC,UAAU,UAAK,KAAK,CAAC,OAAS,CAAC;aACtD;QACH,CAAC,CAAC,CAAC;IACT,CAAC;gFAzCU,cAAc;uDAAd,cAAc;;YCX3B,kCACE;YAAA,8BACE;YAAA,8BACE;YAAA,8BACE;YAAA,8BACE;YAAA,kCACE;YADmB,+IAAU,mBAAgB,IAAC;YAC9C,8BACE;YAAA,gCAA4B;YAAA,wBAAQ;YAAA,iBAAQ;YAC5C,+BACE;YAAA,kCAQA;YAFE,gJAA4B;YAN9B,iBAQA;YAAA,iCACE;YAAA,yBAA8B;YAChC,iBAAO;YACT,iBAAM;YACR,iBAAM;YACN,+BACE;YAAA,iCAA4B;YAAA,yBAAQ;YAAA,iBAAQ;YAC5C,+BACE;YAAA,kCAQA;YAFE,gJAA4B;YAN9B,iBAQA;YAAA,iCACE;YAAA,yBAA0B;YAC5B,iBAAO;YACT,iBAAM;YACR,iBAAM;YAEN,+BACE;YAAA,mCAAgD;YAAA,sBAAK;YAAA,iBAAS;YAChE,iBAAM;YACR,iBAAO;YACT,iBAAM;YACR,iBAAM;YACR,iBAAM;YACR,iBAAM;YACR,iBAAU;;YAhCQ,gBAA4B;YAA5B,4CAA4B;YAgB5B,eAA4B;YAA5B,4CAA4B;;yBD/B9C;CAqDC;AA1CY,wCAAc;kDAAd,cAAc;cAL1B,gBAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;;;;AEVD,mEAA0C;AAC1C,qEAAkD;AAElD,8DAAmD;;;AAKnD;IAME,0BACU,IAAgB,EACI,SAAqB;QADzC,SAAI,GAAJ,IAAI,CAAY;QACI,cAAS,GAAT,SAAS,CAAY;IAE/C,CAAC;IAEL,wCAAa,GAAb;QACE,IAAM,GAAG,GAAM,IAAI,CAAC,SAAS,CAAC,WAAW,SAAI,IAAI,CAAC,SAAS,CAAC,iBAAmB,CAAC;QAChF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgC,GAAG,CAAC,CAAC;IAC3D,CAAC;oFAZU,gBAAgB,0CAKjB,uBAAU;4DALT,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;2BATpB;CAwBC;AAbY,4CAAgB;kDAAhB,gBAAgB;cAH5B,iBAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;sBAMI,aAAM;uBAAC,uBAAU;;;;;;;;;;;;;;;;;AChBtB,kEAA+C;AAC/C,qEAAyD;AACzD,8DAA8E;AAC9E,kEAA+C;AAE/C,gGAAsE;AACtE,4FAAiE;AACjE,4EAA8D;AAC9D,wFAA8D;AAC9D,wFAA8D;;AAE9D;IAwCE,oBAAoC,IAAgB;QAClD,IAAI,IAAI,EAAE;YACR,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;SACrE;IACH,CAAC;kDALU,UAAU;uGAAV,UAAU,cACqB,UAAU,sBA7BzC;YACT;;;;cAIE;YACF;gBACE,OAAO,EAAE,uBAAU;gBACnB,QAAQ,EAAE,sBAAS;aACpB;YACD;gBACE,OAAO,EAAE,wBAAiB;gBAC1B,QAAQ,EAAE,kCAAe;gBACzB,KAAK,EAAE,IAAI;aACZ;YACD;gBACE,OAAO,EAAE,wBAAiB;gBAC1B,QAAQ,EAAE,kCAAe;gBACzB,KAAK,EAAE,IAAI;aACZ;YACD;gBACE,OAAO,EAAE,sBAAe;gBACxB,UAAU,EAAE,UAAC,MAAwB,IAAK,qBAAM,aAAM,CAAC,aAAa,EAAE,EAAtB,CAAsB,EAA5B,CAA4B;gBACtE,IAAI,EAAE,CAAC,qCAAgB,CAAC;gBACxB,KAAK,EAAE,IAAI;aACZ;SACF,YApCQ,CAAC,qBAAY,EAAE,qBAAY,CAAC;qBAZvC;CAwDC;AANY,gCAAU;wFAAV,UAAU;QAhCnB,oEAAoE;QACpE,kCAAe,aAPP,qBAAY,EAAE,qBAAY;QAElC,oEAAoE;QACpE,kCAAe;kDAmCN,UAAU;cAvCtB,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,EAAE,qBAAY,CAAC;gBACrC,OAAO,EAAE;oBACP,oEAAoE;oBACpE,kCAAe;iBAChB;gBACD,YAAY,EAAE;oBACZ,oEAAoE;oBACpE,kCAAe;iBAChB;gBAED,SAAS,EAAE;oBACT;;;;sBAIE;oBACF;wBACE,OAAO,EAAE,uBAAU;wBACnB,QAAQ,EAAE,sBAAS;qBACpB;oBACD;wBACE,OAAO,EAAE,wBAAiB;wBAC1B,QAAQ,EAAE,kCAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,wBAAiB;wBAC1B,QAAQ,EAAE,kCAAe;wBACzB,KAAK,EAAE,IAAI;qBACZ;oBACD;wBACE,OAAO,EAAE,sBAAe;wBACxB,UAAU,EAAE,UAAC,MAAwB,IAAK,qBAAM,aAAM,CAAC,aAAa,EAAE,EAAtB,CAAsB,EAA5B,CAA4B;wBACtE,IAAI,EAAE,CAAC,qCAAgB,CAAC;wBACxB,KAAK,EAAE,IAAI;qBACZ;iBACF;aACF;sCAE2C,UAAU;sBAAvC,eAAQ;;sBAAI,eAAQ;;;;;;;;;;;;;;;;;ACnDnC,8DAAkD;;AAElD;IAOE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;8FALU,qBAAqB;8DAArB,qBAAqB;YCPlC,yBAAG;YAAA,6IAAyB;YAAA,iBAAI;;gCDAhC;CAcC;AAPY,sDAAqB;kDAArB,qBAAqB;cALjC,gBAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AELD,8DAAkD;AAClD,qDAAyC;AACzC,oEAA2C;AAC3C,0DAA8C;AAC9C,kGAAwE;;;;;;ICEhE,6BAA0D;IAAA,kDAAS;IAAA,iBAAI;;;;IAIvE,2BACE;IAAA,+BACE;IAAA,kCACE;IADM,yLAAuB;IAC7B,YAEF;;IAAA,iBAAS;IACT,6BAAwC;IAC1C,iBAAM;IACR,iBAAM;;;IALA,eAEF;IAFE,6SAEF;;;IAkFF,0BACE;IAAA,0BACE;IAAA,YACF;IAAA,iBAAK;IAEL,0BACE;IAAA,gCACE;IAAA,YACF;IAAA,iBAAO;IACT,iBAAK;IAEL,0BACE;IAAA,gCAAmC;IAAA,YAEjC;IAAA,iBAAO;IACX,iBAAK;IACL,0BACE;IAAA,iCACE;IAAA,aACF;IAAA,iBAAO;IACT,iBAAK;IAEL,2BACE;IAAA,iCACE;IAAA,aACF;IAAA,iBAAO;IACT,iBAAK;IACP,iBAAK;;;IAzBD,eACF;IADE,qDACF;IAII,eACF;IADE,6DACF;IAImC,eAEjC;IAFiC,8CAEjC;IAIA,eACF;IADE,0DACF;IAKE,eACF;IADE,mDACF;;;IAuBJ,0BACE;IAAA,0BACE;IAAA,YACF;IAAA,iBAAK;IAEL,0BACE;IAAA,gCACE;IAAA,YACF;IAAA,iBAAO;IACT,iBAAK;IAEL,0BACE;IAAA,gCACE;IAAA,YAA2B;IAAA,iBAC5B;IACH,iBAAK;IAEL,0BACE;IAAA,aACF;IAAA,iBAAK;IACP,iBAAK;;;IAlBD,eACF;IADE,qDACF;IAII,eACF;IADE,2DACF;IAKE,eAA2B;IAA3B,wDAA2B;IAK7B,eACF;IADE,iDACF;;AD9JZ;IAmBE,gCAAoB,iBAAoC,EAAU,gBAAkC;QAAhF,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QAZpG,uBAAkB,GAAQ,EAAE,CAAC;QAC7B,8BAAyB,GAAgB,IAAI,CAAC;QACtC,UAAK,GAAG,EAAE,CAAC;QAEnB,mBAAc,GAAkC,EAAE,CAAC;QAEnD,cAAS,GAAG,KAAK,CAAC;QAClB,oBAAe,GAAgB,IAAI,CAAC;QACpC,uBAAkB,GAA8B,IAAI,CAAC;QACrD,mBAAc,GAAG,EAAS,CAAC;QAC3B,YAAO,GAAG,EAAE,CAAC;IAKb,CAAC;IAIK,yCAAQ,GAAd;;;;gBACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;gBACzE,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,CAAC;gBAC1F,IAAI,CAAC,WAAW,EAAE,CAAC;gBAEnB,WAAW,CAAC;oBACV,KAAI,CAAC,WAAW,EAAE,CAAC;gBACrB,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;;;KAEnB;IAIO,2CAAU,GAAlB;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,kBAAkB,GAAG,YAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAC3C,gBAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAChB,eAAG,CAAC,cAAM,SAAE,KAAI,CAAC,KAAK,EAAZ,CAAY,CAAC,CACxB,CAAC;IACJ,CAAC;IACD,4CAAW,GAAX;QAAA,iBAcC;QAZC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,gBAAM;YACpD,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC;YAC7B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,KAAI,CAAC,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,8DAA8D;QAC9D,gCAAgC;QAChC,MAAM;IAER,CAAC;gGAvDU,sBAAsB;+DAAtB,sBAAsB;YCZnC,kCACE;YAAA,8BACE;YAAA,yBAAG;YAAA,kEAAU;YAAA,iBAAI;YACnB,iBAAM;YACN,8BACE;YAAA,8BACE;YAAA,8BACE;YAAA,mEAAuE;YACzE,iBAAM;YAEN,8BACE;YAAA,uEAQM;YACR,iBAAM;YACR,iBAAM;YAEN,+BACE;YAAA,+BACE;YAAA,6BAAM;YAAA,aAAa;YAAA,iBAAO;YAC5B,iBAAM;YACR,iBAAM;YACR,iBAAM;YACR,iBAAU;YAEV,+BACE;YAAA,+BACE;YAAA,mCACE;YAAA,8BAAiB;YAAA,aAAoC;YAAA,iBAAI;YACzD,8BAAoB;YAAA,8EAAW;YAAA,iBAAI;YACrC,iBAAU;YACZ,iBAAM;YAEN,+BACE;YAAA,oCACE;YAAA,8BACE;YAAA,aACF;YAAA,iBAAI;YACJ,8BAAoB;YAAA,yEAAW;YAAA,iBAAI;YACrC,iBAAU;YACZ,iBAAM;YACN,+BACE;YAAA,oCACE;YAAA,8BACE;YAAA,aACF;YAAA,iBAAI;YACJ,8BAAoB;YAAA,mHAAkB;YAAA,iBAAI;YAC5C,iBAAU;YACZ,iBAAM;YACN,+BACE;YAAA,oCACE;YAAA,8BACE;YAAA,aACF;YAAA,iBAAI;YACJ,8BAAoB;YAAA,iGAAe;YAAA,iBAAI;YACzC,iBAAU;YACZ,iBAAM;YACN,+BACE;YAAA,oCACE;YAAA,8BACE;YAAA,aACF;YAAA,iBAAI;YACJ,8BAAoB;YAAA,iGAAe;YAAA,iBAAI;YACzC,iBAAU;YACZ,iBAAM;YAEN,+BACE;YAAA,oCACE;YAAA,8BACE;YAAA,aACF;YAAA,iBAAI;YACJ,8BAAkC;YAAA,sIAAsB;YAAA,iBAAI;YAC9D,iBAAU;YACZ,iBAAM;YACR,iBAAM;YAEN,+BACE;YAAA,oCACE;YAAA,8BAAyB;YAAA,qDAAM;YAAA,iBAAI;YACnC,gCACE;YAAA,kCACE;YAAA,8BACE;YAAA,2BACE;YAAA,2BAAI;YAAA,yCAAI;YAAA,iBAAK;YACb,2BAAI;YAAA,wEAAU;YAAA,iBAAK;YACnB,2BAAI;YAAA,qFAAa;YAAA,iBAAK;YACtB,2BAAI;YAAA,0FAAa;YAAA,iBAAK;YACtB,2BAAI;YAAA,4DAAQ;YAAA,iBAAK;YACnB,iBAAK;YACP,iBAAQ;YACR,yBAAe;YACf,8BACE;YAAA,yEA2BK;YACP,iBAAQ;YACV,iBAAQ;YACV,iBAAM;YACR,iBAAU;YAEV,oCACE;YAAA,8BAAyB;YAAA,+CAAK;YAAA,iBAAI;YAElC,gCACE;YAAA,kCACE;YAAA,8BACE;YAAA,2BACE;YAAA,2BAAI;YAAA,+EAAY;YAAA,iBAAK;YACrB,2BAAI;YAAA,+CAAK;YAAA,iBAAK;YACd,2BAAI;YAAA,kEAAS;YAAA,iBAAK;YAClB,2BAAI;YAAA,yCAAI;YAAA,iBAAK;YACf,iBAAK;YACP,iBAAQ;YACR,yBAAe;YACf,8BACE;YAAA,yEAoBK;YACP,iBAAQ;YACV,iBAAQ;YACV,iBAAM;YACR,iBAAU;YACZ,iBAAM;;YApKM,eAAe;YAAf,oCAAe;YAIb,eAAgB;YAAhB,qCAAgB;YAchB,eAAa;YAAb,iCAAa;YASJ,eAAoC;YAApC,wDAAoC;YAQnD,eACF;YADE,mEACF;YAOE,eACF;YADE,yEACF;YAOE,eACF;YADE,0EACF;YAOE,eACF;YADE,oFACF;YAQE,eACF;YADE,sEACF;YAsByB,gBAAuB;YAAvB,kDAAuB;YAgDvB,gBAA8B;YAA9B,yDAA8B;;iCDlJ7D;CAsEC;AA1DY,wDAAsB;kDAAtB,sBAAsB;cALlC,gBAAS;eAAC;gBACT,QAAQ,EAAE,oBAAoB;gBAC9B,WAAW,EAAE,iCAAiC;gBAC9C,SAAS,EAAE,CAAC,gCAAgC,CAAC;aAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEXD,8DAAyC;AACzC,kEAAuD;AAEvD,8GAAkF;AAClF,yFAA+D;;;AAE/D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,oCAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;IACtD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,gDAAqB,EAAE;CACjD,CAAC;AAEF;IAAA;KAIiC;wDAApB,gBAAgB;mHAAhB,gBAAgB,kBAHlB,CAAC,qBAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,qBAAY;2BAdxB;CAgBiC;AAApB,4CAAgB;wFAAhB,gBAAgB,0CAFjB,qBAAY;kDAEX,gBAAgB;cAJ5B,eAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,qBAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACvC,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB;;;;;;;;;;;;;;;;ACfD,8DAA+C;AAI/C,kFAAyD;;;AAEzD,IAAI,yBAAW,CAAC,UAAU,EAAE;IAC1B,qBAAc,EAAE,CAAC;CAClB;AAED,qCAAwB,gBAAgB,+BAAW;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { APP_CONFIG, IAppConfig } from \"@app/core\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\nimport { ChangePassword } from \"./../models/change-password\";\n\n@Injectable()\nexport class ChangePasswordService {\n\n  constructor(\n    private http: HttpClient,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig) { }\n\n  changePassword(model: ChangePassword): Observable<any> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n    const url = `${this.appConfig.apiEndpoint}/ChangePassword`;\n    return this.http\n      .post(url, model, { headers: headers })\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      );\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrowserStorageService {\n\n  getSession(key: string): any {\n    const data = window.sessionStorage.getItem(key);\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return null;\n    }\n  }\n\n  setSession(key: string, value: any): void {\n    const data = value === undefined ? \"\" : JSON.stringify(value);\n    window.sessionStorage.setItem(key, data);\n  }\n\n  removeSession(key: string): void {\n    window.sessionStorage.removeItem(key);\n  }\n\n  removeAllSessions(): void {\n    for (const key in window.sessionStorage) {\n      if (window.sessionStorage.hasOwnProperty(key)) {\n        this.removeSession(key);\n      }\n    }\n  }\n\n  getLocal(key: string): any {\n    const data = window.localStorage.getItem(key);\n    if (data) {\n      return JSON.parse(data);\n    } else {\n      return null;\n    }\n  }\n\n  setLocal(key: string, value: any): void {\n    const data = value === undefined ? \"\" : JSON.stringify(value);\n    window.localStorage.setItem(key, data);\n  }\n\n  removeLocal(key: string): void {\n    window.localStorage.removeItem(key);\n  }\n\n  removeAllLocals(): void {\n    for (const key in window.localStorage) {\n      if (window.localStorage.hasOwnProperty(key)) {\n        this.removeLocal(key);\n      }\n    }\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nexport let APP_CONFIG = new InjectionToken<string>(\"app.config\");\n\nexport interface IAppConfig {\n  dashboardEndPoint: string;\n  apiEndpoint: string;\n  apiSettingsPath: string;\n}\n\nexport const AppConfig: IAppConfig = {\n  apiEndpoint: \"https://api.donak.ir/api\",\n  apiSettingsPath: \"ApiSettings\",\n  dashboardEndPoint: \"asrar/dashboard\"\n};\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { BehaviorSubject, Observable, throwError } from \"rxjs\";\nimport { catchError, finalize, map } from \"rxjs/operators\";\n\nimport { AuthTokenType } from \"./../models/auth-token-type\";\nimport { AuthUser } from \"./../models/auth-user\";\nimport { Credentials } from \"./../models/credentials\";\nimport { ApiConfigService } from \"./api-config.service\";\nimport { APP_CONFIG, IAppConfig } from \"./app.config\";\nimport { RefreshTokenService } from \"./refresh-token.service\";\nimport { TokenStoreService } from \"./token-store.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private authStatusSource = new BehaviorSubject<boolean>(false);\n  authStatus$ = this.authStatusSource.asObservable();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig,\n    private apiConfigService: ApiConfigService,\n    private tokenStoreService: TokenStoreService,\n    private refreshTokenService: RefreshTokenService\n  ) {\n    this.updateStatusOnPageRefresh();\n    this.refreshTokenService.scheduleRefreshToken(this.isAuthUserLoggedIn(), false);\n  }\n\n  login(credentials: Credentials): Observable<boolean> {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n    return this.http\n      .post(`${this.appConfig.apiEndpoint}/${this.apiConfigService.configuration.loginPath}`,\n        credentials, { headers: headers })\n      .pipe(\n        map((response: any) => {\n          this.tokenStoreService.setRememberMe(true);\n          if (!response) {\n            console.error(\"There is no `{'\" + this.apiConfigService.configuration.accessTokenObjectKey +\n              \"':'...','\" + this.apiConfigService.configuration.refreshTokenObjectKey + \"':'...value...'}` response after login.\");\n            this.authStatusSource.next(false);\n            return false;\n          }\n          this.tokenStoreService.storeLoginSession(response);\n          console.log(\"Logged-in user info\", this.getAuthUser());\n          // this.refreshTokenService.scheduleRefreshToken(true, true);\n          this.authStatusSource.next(true);\n          return true;\n        }),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      );\n  }\n\n  getBearerAuthHeader(): HttpHeaders {\n    return new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${this.tokenStoreService.getRawAuthToken(AuthTokenType.AccessToken)}`\n    });\n  }\n\n  logout(navigateToHome: boolean): void {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n    const refreshToken = encodeURIComponent(this.tokenStoreService.getRawAuthToken(AuthTokenType.RefreshToken));\n    this.http\n      .get(`${this.appConfig.apiEndpoint}/${this.apiConfigService.configuration.logoutPath}?refreshToken=${refreshToken}`,\n        { headers: headers })\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error)),\n        finalize(() => {\n          this.tokenStoreService.deleteAuthTokens();\n          this.refreshTokenService.unscheduleRefreshToken(true);\n          this.authStatusSource.next(false);\n          if (navigateToHome) {\n            this.router.navigate([\"/\"]);\n          }\n        }))\n      .subscribe(result => {\n        console.log(\"logout\", result);\n      });\n  }\n\n  isAuthUserLoggedIn(): boolean {\n    return this.tokenStoreService.hasStoredAccessAndRefreshTokens() &&\n      !this.tokenStoreService.isAccessTokenTokenExpired();\n  }\n\n  getAuthUser(): AuthUser | null {\n    if (!this.isAuthUserLoggedIn()) {\n      return null;\n    }\n\n    const decodedToken = this.tokenStoreService.getDecodedAccessToken();\n    const roles = this.tokenStoreService.getDecodedTokenRoles();\n    return Object.freeze({\n      userId: decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\"],\n      userName: decodedToken[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name\"],\n      displayName: decodedToken[\"DisplayName\"],\n      roles: roles\n    });\n  }\n\n  isAuthUserInRoles(requiredRoles: string[]): boolean {\n    const user = this.getAuthUser();\n    if (!user || !user.roles) {\n      return false;\n    }\n\n    if (user.roles.indexOf(this.apiConfigService.configuration.adminRoleName.toLowerCase()) >= 0) {\n      return true; // The `Admin` role has full access to every pages.\n    }\n\n    return requiredRoles.some(requiredRole => {\n      if (user.roles) {\n        return user.roles.indexOf(requiredRole.toLowerCase()) >= 0;\n      } else {\n        return false;\n      }\n    });\n  }\n\n  isAuthUserInRole(requiredRole: string): boolean {\n    return this.isAuthUserInRoles([requiredRole]);\n  }\n\n  private updateStatusOnPageRefresh(): void {\n    this.authStatusSource.next(this.isAuthUserLoggedIn());\n  }\n}\n","import { Attribute, Directive } from \"@angular/core\";\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from \"@angular/forms\";\n\n@Directive({\n  // https://angular.io/guide/styleguide#style-02-08\n  // Do use a custom prefix for the selector of directives (e.g, the prefix toh from Tour of Heroes).\n  // Do spell non-element selectors in lower camel case unless the selector is meant to match a native HTML attribute.\n\n  // the directive matches elements that have the attribute appValidateEqual and one of the formControlName or formControl or ngModel\n  selector:\n    \"[appValidateEqual][formControlName],[appValidateEqual][formControl],[appValidateEqual][ngModel]\",\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: EqualValidatorDirective,\n      multi: true // the new directives are added to the previously registered directives instead of overriding them.\n    }\n  ]\n})\nexport class EqualValidatorDirective implements Validator {\n  constructor(@Attribute(\"compare-to\") public compareToControl: string) { }\n\n  validate(element: AbstractControl): ValidationErrors | null {\n    const selfValue = element.value;\n    const otherControl = element.root.get(this.compareToControl);\n\n    /*\n    console.log(\"EqualValidatorDirective\", {\n      thisControlValue: selfValue,\n      otherControlValue: otherControl ? otherControl.value : null\n    });\n    */\n\n    if (otherControl && selfValue !== otherControl.value) {\n      return {\n        appValidateEqual: true // Or a string such as 'Password mismatch.' or an abject.\n      };\n    }\n\n    if (\n      otherControl &&\n      otherControl.errors &&\n      selfValue === otherControl.value\n    ) {\n      delete otherControl.errors[\"appValidateEqual\"];\n      if (!Object.keys(otherControl.errors).length) {\n        otherControl.setErrors(null);\n      }\n    }\n\n    return null;\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"]\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  title = \"اسرار دنک\";\n\n  isLoggedIn = false;\n  subscription: Subscription | null = null;\n  displayName = \"\";\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.subscription = this.authService.authStatus$.subscribe(status => {\n      this.isLoggedIn = status;\n      if (status) {\n        const authUser = this.authService.getAuthUser();\n        this.displayName = authUser ? authUser.displayName : \"\";\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    // prevent memory leak when component is destroyed\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  logout() {\n    this.authService.logout(true);\n  }\n}\n","<nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n  <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n    <div class=\"navbar-item\">\n      <div class=\"buttons\">\n        <a class=\"button\" [routerLink]=\"['/welcome']\"> خونه </a>\n        <a class=\"button\" [routerLink]=\"['/login']\">دخول کن</a>\n        <a class=\"button is-primary\" [routerLink]=\"['/protectedPage']\"\n          >اصل کاری</a\n        >\n      </div>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-welcome\",\n  templateUrl: \"./welcome.component.html\",\n  styleUrls: [\"./welcome.component.css\"]\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1>قدم رو تخم چیشام گذوشتی. رمزت رو بزن و وارد شو سید.</h1>\n<span> دکمه ی لاگین بالا هس </span>\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpXsrfTokenExtractor } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class XsrfInterceptor implements HttpInterceptor { // Handles absolute URLs\n\n  constructor(private tokenExtractor: HttpXsrfTokenExtractor) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    /*\n        const lcUrl = request.url.toLowerCase();\n        if (request.method === \"GET\" || request.method === \"HEAD\" ||\n          lcUrl.startsWith(\"http://\") || lcUrl.startsWith(\"https://\")) {\n          console.log(\"Original HttpXsrfInterceptor skips both non-mutating requests and absolute URLs.\");\n          console.log(\"Skipped request\", { lcUrl: lcUrl, method: request.method });\n        }\n    */\n    if (request.method === \"POST\") {\n      const headerName = \"X-XSRF-TOKEN\";\n      const token = this.tokenExtractor.getToken();\n      if (token && !request.headers.has(headerName)) {\n        request = request.clone({\n          headers: request.headers.set(headerName, token)\n        });\n      }\n    }\n    return next.handle(request);\n  }\n}\n","export enum AuthTokenType {\n  AccessToken,\n  RefreshToken\n}\n","import { Location } from \"@angular/common\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { AuthService } from \"@app/core\";\n\n@Component({\n  selector: \"app-access-denied\",\n  templateUrl: \"./access-denied.component.html\",\n  styleUrls: [\"./access-denied.component.css\"]\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  isAuthenticated = false;\n\n  constructor(\n    private location: Location,\n    private authService: AuthService\n  ) {\n  }\n\n  ngOnInit() {\n    this.isAuthenticated = this.authService.isAuthUserLoggedIn();\n  }\n\n  goBack() {\n    this.location.back(); // <-- go back to previous location on cancel\n  }\n}\n","<h1 class=\"text-danger\">\n  <i class=\"fa fa-ban\" aria-hidden=\"true\"></i> نصلاح هس\n</h1>\n<p>اینجو جوی شما نیس. (دسترسی نداری )</p>\n<button class=\"btn btn-default\" (click)=\"goBack()\">\n  <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Back\n</button>\n\n<button\n  *ngIf=\"!isAuthenticated\"\n  class=\"btn btn-success\"\n  [routerLink]=\"['/login']\"\n  queryParamsHandling=\"merge\"\n>\n  وارد شو\n</button>\n","import { Injectable } from \"@angular/core\";\n\nimport { BrowserStorageService } from \"./browser-storage.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor(private browserStorageService: BrowserStorageService) { }\n\n  isEmptyString(value: string): boolean {\n    return !value || 0 === value.length;\n  }\n\n  getCurrentTabId(): number {\n    const tabIdToken = \"currentTabId\";\n    let tabId = this.browserStorageService.getSession(tabIdToken);\n    if (tabId) {\n      return tabId;\n    }\n    tabId = Math.random();\n    this.browserStorageService.setSession(tabIdToken, tabId);\n    return tabId;\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SharedModule } from \"@app/shared/shared.module\";\n\nimport { AccessDeniedComponent } from \"./access-denied/access-denied.component\";\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\nimport { ChangePasswordService } from \"./change-password/services/change-password.service\";\nimport { LoginComponent } from \"./login/login.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    AuthenticationRoutingModule\n  ],\n  declarations: [LoginComponent, AccessDeniedComponent, ChangePasswordComponent],\n  providers: [ChangePasswordService]\n})\nexport class AuthenticationModule { }\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AuthGuard, AuthGuardPermission } from \"@app/core\";\n\nimport { CallProtectedApiComponent } from \"./call-protected-api/call-protected-api.component\";\nimport { ProtectedPageComponent } from \"./protected-page/protected-page.component\";\n\nconst routes: Routes = [\n  {\n    path: \"protectedPage\",\n    component: ProtectedPageComponent,\n    data: {\n      permission: {\n        permittedRoles: [\"Admin\"]\n      } as AuthGuardPermission\n    },\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"callProtectedApi\",\n    component: CallProtectedApiComponent,\n    data: {\n      permission: {\n        permittedRoles: [\"Admin\", \"User\"]\n      } as AuthGuardPermission\n    },\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { EqualValidatorDirective } from \"./directives/equal-validator.directive\";\nimport { HasAuthUserViewPermissionDirective } from \"./directives/has-auth-user-view-permission.directive\";\nimport { IsVisibleForAuthUserDirective } from \"./directives/is-visible-for-auth-user.directive\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  entryComponents: [\n    // All components about to be loaded \"dynamically\" need to be declared in the entryComponents section.\n  ],\n  declarations: [\n    // common and shared components/directives/pipes between more than one module and components will be listed here.\n    IsVisibleForAuthUserDirective,\n    HasAuthUserViewPermissionDirective,\n    EqualValidatorDirective\n  ],\n  exports: [\n    // common and shared components/directives/pipes between more than one module and components will be listed here.\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    IsVisibleForAuthUserDirective,\n    HasAuthUserViewPermissionDirective,\n    EqualValidatorDirective\n  ]\n  /* No providers here! Since they’ll be already provided in AppModule. */\n})\nexport class SharedModule {\n  static forRoot(): ModuleWithProviders<{}> {\n    // Forcing the whole app to use the returned providers from the AppModule only.\n    return {\n      ngModule: SharedModule,\n      providers: [ /* All of your services here. It will hold the services needed by `itself`. */]\n    };\n  }\n}\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from \"@angular/common/http\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { Subscription, throwError, timer } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\nimport { AuthTokenType } from \"./../models/auth-token-type\";\nimport { ApiConfigService } from \"./api-config.service\";\nimport { APP_CONFIG, IAppConfig } from \"./app.config\";\nimport { BrowserStorageService } from \"./browser-storage.service\";\nimport { TokenStoreService } from \"./token-store.service\";\nimport { UtilsService } from \"./utils.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RefreshTokenService {\n\n  private refreshTokenTimerCheckId = \"is_refreshToken_timer_started\";\n  private refreshTokenSubscription: Subscription | null = null;\n\n  constructor(\n    private tokenStoreService: TokenStoreService,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig,\n    private apiConfigService: ApiConfigService,\n    private http: HttpClient,\n    private browserStorageService: BrowserStorageService,\n    private utilsService: UtilsService) { }\n\n  scheduleRefreshToken(isAuthUserLoggedIn: boolean, calledFromLogin: boolean) {\n    this.unscheduleRefreshToken(false);\n\n    if (!isAuthUserLoggedIn) {\n      return;\n    }\n\n    const expDateUtc = this.tokenStoreService.getAccessTokenExpirationDateUtc();\n    if (!expDateUtc) {\n      throw new Error(\"This access token has not the `exp` property.\");\n    }\n    const expiresAtUtc = expDateUtc.valueOf();\n    const nowUtc = new Date().valueOf();\n    const threeSeconds = 3000;\n    // threeSeconds instead of 1 to prevent other tab timers run less than threeSeconds\n    const initialDelay = Math.max(threeSeconds, expiresAtUtc - nowUtc - threeSeconds);\n    console.log(\"Initial scheduleRefreshToken Delay(ms)\", initialDelay);\n    const timerSource$ = timer(initialDelay);\n    this.refreshTokenSubscription = timerSource$.subscribe(() => {\n      if (calledFromLogin || !this.isRefreshTokenTimerStartedInAnotherTab()) {\n        this.refreshToken(isAuthUserLoggedIn);\n      } else {\n        this.scheduleRefreshToken(isAuthUserLoggedIn, false);\n      }\n    });\n\n    if (calledFromLogin || !this.isRefreshTokenTimerStartedInAnotherTab()) {\n      this.setRefreshTokenTimerStarted();\n    }\n  }\n\n  unscheduleRefreshToken(cancelTimerCheckToken: boolean) {\n    if (this.refreshTokenSubscription) {\n      this.refreshTokenSubscription.unsubscribe();\n    }\n\n    if (cancelTimerCheckToken) {\n      this.deleteRefreshTokenTimerCheckId();\n    }\n  }\n\n  invalidateCurrentTabId() {\n    if (!this.tokenStoreService.rememberMe()) {\n      return;\n    }\n\n    const currentTabId = this.utilsService.getCurrentTabId();\n    const timerStat = this.browserStorageService.getLocal(\n      this.refreshTokenTimerCheckId\n    );\n    if (timerStat && timerStat.tabId === currentTabId) {\n      this.setRefreshTokenTimerStopped();\n    }\n  }\n\n  private refreshToken(isAuthUserLoggedIn: boolean) {\n    const headers = new HttpHeaders({ \"Content-Type\": \"application/json\" });\n    const model = { refreshToken: this.tokenStoreService.getRawAuthToken(AuthTokenType.RefreshToken) };\n    return this.http\n      .post(`${this.appConfig.apiEndpoint}/${this.apiConfigService.configuration.refreshTokenPath}`,\n        model, { headers: headers })\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      )\n      .subscribe(result => {\n        console.log(\"RefreshToken Result\", result);\n        this.tokenStoreService.storeLoginSession(result);\n        // this.deleteRefreshTokenTimerCheckId();\n        this.scheduleRefreshToken(isAuthUserLoggedIn, false);\n      });\n  }\n\n  private isRefreshTokenTimerStartedInAnotherTab(): boolean {\n    if (!this.tokenStoreService.rememberMe()) {\n      return false; // It uses the session storage for the tokens and its access scope is limited to the current tab.\n    }\n\n    const currentTabId = this.utilsService.getCurrentTabId();\n    const timerStat = this.browserStorageService.getLocal(this.refreshTokenTimerCheckId);\n    console.log(\"RefreshTokenTimer Check\", {\n      refreshTokenTimerCheckId: timerStat,\n      currentTabId: currentTabId\n    });\n    const isStarted = timerStat && timerStat.isStarted === true && timerStat.tabId !== currentTabId;\n    if (isStarted) {\n      console.log(`RefreshToken timer has already been started in another tab with tabId=${timerStat.tabId}.\n      currentTabId=${currentTabId}.`);\n    }\n    return isStarted;\n  }\n\n  private setRefreshTokenTimerStarted(): void {\n    this.browserStorageService.setLocal(this.refreshTokenTimerCheckId,\n      {\n        isStarted: true,\n        tabId: this.utilsService.getCurrentTabId()\n      });\n  }\n\n  private deleteRefreshTokenTimerCheckId() {\n    this.browserStorageService.removeLocal(this.refreshTokenTimerCheckId);\n  }\n\n  private setRefreshTokenTimerStopped(): void {\n    this.browserStorageService.setLocal(this.refreshTokenTimerCheckId, {\n      isStarted: false,\n      tabId: -1\n    });\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { AuthService } from \"@app/core\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[isVisibleForAuthUser]\"\n})\nexport class IsVisibleForAuthUserDirective implements OnInit, OnDestroy {\n\n  private subscription: Subscription | null = null;\n\n  @Input() isVisibleForRoles: string[] | null = null;\n\n  constructor(private elem: ElementRef, private authService: AuthService) { }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.authService.authStatus$.subscribe(status => this.changeVisibility(status));\n    this.changeVisibility(this.authService.isAuthUserLoggedIn());\n  }\n\n  private changeVisibility(status: boolean) {\n    const isInRoles = !this.isVisibleForRoles ? true : this.authService.isAuthUserInRoles(this.isVisibleForRoles);\n    this.elem.nativeElement.style.display = isInRoles && status ? \"\" : \"none\";\n  }\n}\n","import { Component, HostListener} from \"@angular/core\";\nimport { RefreshTokenService } from \"app/core\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  constructor(private refreshTokenService: RefreshTokenService) {}\n\n  @HostListener(\"window:unload\", [\"$event\"])\n  unloadHandler() {\n    // Invalidate current tab as active RefreshToken timer\n    this.refreshTokenService.invalidateCurrentTabId();\n  }\n\n  @HostListener(\"window:beforeunload\", [\"$event\"])\n  beforeUnloadHander() {\n    // ...\n  }\n}\n","<app-header></app-header>\n<div class=\"container p-5\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { SharedModule } from \"../shared/shared.module\";\nimport { CallProtectedApiComponent } from \"./call-protected-api/call-protected-api.component\";\nimport { DashboardRoutingModule } from \"./dashboard-routing.module\";\nimport { ProtectedPageComponent } from \"./protected-page/protected-page.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    DashboardRoutingModule\n  ],\n  declarations: [ProtectedPageComponent, CallProtectedApiComponent]\n})\nexport class DashboardModule { }\n","import { Directive, Input, OnDestroy, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { AuthService } from \"@app/core\";\nimport { Subscription } from \"rxjs\";\n\n@Directive({\n  selector: \"[hasAuthUserViewPermission]\"\n})\nexport class HasAuthUserViewPermissionDirective implements OnInit, OnDestroy {\n  private isVisible = false;\n  private requiredRoles: string[] | null = null;\n  private subscription: Subscription | null = null;\n\n  @Input()\n  set hasAuthUserViewPermission(roles: string[] | null) {\n    this.requiredRoles = roles;\n  }\n\n  // Note, if you don't place the * in front, you won't be able to inject the TemplateRef<any> or ViewContainerRef into your directive.\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.subscription = this.authService.authStatus$.subscribe(status => this.changeVisibility(status));\n    this.changeVisibility(this.authService.isAuthUserLoggedIn());\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  private changeVisibility(status: boolean) {\n    const isInRoles = !this.requiredRoles ? true : this.authService.isAuthUserInRoles(this.requiredRoles);\n    if (isInRoles && status) {\n      if (!this.isVisible) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n        this.isVisible = true;\n      }\n    } else {\n      this.isVisible = false;\n      this.viewContainer.clear();\n    }\n  }\n}\n","import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ChangePassword } from \"./models/change-password\";\nimport { ChangePasswordService } from \"./services/change-password.service\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"./change-password.component.html\",\n  styleUrls: [\"./change-password.component.css\"]\n})\nexport class ChangePasswordComponent implements OnInit {\n\n  error = \"\";\n  model: ChangePassword = {\n    oldPassword: \"\",\n    newPassword: \"\",\n    confirmPassword: \"\"\n  };\n\n  constructor(private router: Router, private changePasswordService: ChangePasswordService) { }\n\n  ngOnInit() {\n  }\n\n  submitForm(form: NgForm) {\n    console.log(this.model);\n    console.log(form.value);\n    this.error = \"\";\n    this.changePasswordService.changePassword(this.model)\n      .subscribe(() => {\n        this.router.navigate([\"/welcome\"]);\n      }, (error: HttpErrorResponse) => {\n        console.error(\"ChangePassword error\", error);\n        this.error = `${error.error} -> ${error.statusText}: ${error.message}`;\n      });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    <h2 class=\"card-title\">Change Password</h2>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"container\">\n      <form #form=\"ngForm\" (submit)=\"submitForm(form)\" novalidate>\n\n        <div class=\"form-group\">\n          <label class=\"control-label\">Current Password</label>\n          <input name=\"oldPassword\" #oldPassword=\"ngModel\" [class.is-invalid]=\"oldPassword.invalid && oldPassword.touched\"\n            type=\"password\" required class=\"form-control\" name=\"password\" [(ngModel)]=\"model.oldPassword\">\n          <ng-container *ngTemplateOutlet=\"validationErrorsTemplate; context:{ control: oldPassword }\"></ng-container>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"control-label\">New Password</label>\n          <input name=\"newPassword\" #newPassword=\"ngModel\" [class.is-invalid]=\"newPassword.invalid && newPassword.touched\"\n            type=\"password\" required minlength=\"4\" class=\"form-control\" name=\"newPassword\"\n            appValidateEqual compare-to=\"confirmPassword\" [(ngModel)]=\"model.newPassword\">\n          <ng-container *ngTemplateOutlet=\"validationErrorsTemplate; context:{ control: newPassword }\"></ng-container>\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"control-label\">Confirm Password</label>\n          <input name=\"confirmPassword\" #confirmPassword=\"ngModel\" [class.is-invalid]=\"confirmPassword.invalid && confirmPassword.touched\"\n            type=\"password\" required minlength=\"4\" class=\"form-control\" name=\"confirmPassword\"\n            appValidateEqual compare-to=\"newPassword\" [(ngModel)]=\"model.confirmPassword\">\n          <ng-container *ngTemplateOutlet=\"validationErrorsTemplate; context:{ control: confirmPassword }\"></ng-container>\n        </div>\n\n        <button class=\"btn btn-primary\" [disabled]=\"form.invalid\" type=\"submit\">Submit</button>\n\n        <div *ngIf=\"error\" class=\"alert alert-danger \" role=\"alert \">\n          {{error}}\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n\n<ng-template #validationErrorsTemplate let-ctrl=\"control\">\n  <div *ngIf=\"ctrl.invalid && ctrl.touched\">\n    <div class=\"alert alert-danger\" *ngIf=\"ctrl.errors.required\">\n      This field is required.\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"ctrl.errors.minlength\">\n      This field should be minimum {{ctrl.errors.minlength.requiredLength}} characters.\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"ctrl.errors.maxlength\">\n      This field should be max {{ctrl.errors.maxlength.requiredLength}} characters.\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"ctrl.errors.pattern\">\n      This field's pattern: {{ctrl.errors.pattern.requiredPattern}}\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"ctrl.errors.modelStateError\">\n      {{ctrl.errors.modelStateError.error}}\n    </div>\n    <div class=\"alert alert-danger\" *ngIf=\"ctrl.errors.appValidateEqual\">\n      Password mismatch.\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { AuthenticationModule } from \"./authentication/authentication.module\";\nimport { CoreModule } from \"./core/core.module\";\nimport { DashboardModule } from \"./dashboard/dashboard.module\";\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { SharedModule } from \"./shared/shared.module\";\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    PageNotFoundComponent\n  ],\n  imports: [\n    BrowserModule,\n    CoreModule,\n    SharedModule.forRoot(),\n    AuthenticationModule,\n    DashboardModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanActivateChild,\n  CanLoad,\n  Data,\n  Route,\n  Router,\n  RouterStateSnapshot,\n} from \"@angular/router\";\n\nimport { AuthGuardPermission } from \"../models/auth-guard-permission\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanLoad {\n\n  private permissionObjectKey = \"permission\";\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const permissionData = route.data[this.permissionObjectKey] as AuthGuardPermission;\n    const returnUrl = state.url;\n    return this.hasAuthUserAccessToThisRoute(permissionData, returnUrl);\n  }\n\n  canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    const permissionData = childRoute.data[this.permissionObjectKey] as AuthGuardPermission;\n    const returnUrl = state.url;\n    return this.hasAuthUserAccessToThisRoute(permissionData, returnUrl);\n  }\n\n  canLoad(route: Route): boolean {\n    if (route.data) {\n      const permissionData = route.data[this.permissionObjectKey] as AuthGuardPermission;\n      const returnUrl = `/${route.path}`;\n      return this.hasAuthUserAccessToThisRoute(permissionData, returnUrl);\n    } else {\n      return true;\n    }\n  }\n\n  private hasAuthUserAccessToThisRoute(permissionData: Data, returnUrl: string): boolean {\n    if (!this.authService.isAuthUserLoggedIn()) {\n      this.showAccessDenied(returnUrl);\n      return false;\n    }\n\n    if (!permissionData) {\n      return true;\n    }\n\n    if (Array.isArray(permissionData.deniedRoles) && Array.isArray(permissionData.permittedRoles)) {\n      throw new Error(\"Don't set both 'deniedRoles' and 'permittedRoles' in route data.\");\n    }\n\n    if (Array.isArray(permissionData.permittedRoles)) {\n      const isInRole = this.authService.isAuthUserInRoles(permissionData.permittedRoles);\n      if (isInRole) {\n        return true;\n      }\n\n      this.showAccessDenied(returnUrl);\n      return false;\n    }\n\n    if (Array.isArray(permissionData.deniedRoles)) {\n      const isInRole = this.authService.isAuthUserInRoles(permissionData.deniedRoles);\n      if (!isInRole) {\n        return true;\n      }\n\n      this.showAccessDenied(returnUrl);\n      return false;\n    }\n\n    return true;\n  }\n\n  private showAccessDenied(returnUrl: string) {\n    this.router.navigate([\"/accessDenied\"], { queryParams: { returnUrl: returnUrl } });\n  }\n}\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { APP_CONFIG, AuthService, IAppConfig } from \"@app/core\";\nimport { throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-call-protected-api\",\n  templateUrl: \"./call-protected-api.component.html\",\n  styleUrls: [\"./call-protected-api.component.css\"]\n})\nexport class CallProtectedApiComponent implements OnInit {\n\n  isAdmin = false;\n  isUser = false;\n  result: any;\n\n  constructor(\n    private authService: AuthService,\n    private httpClient: HttpClient,\n    @Inject(APP_CONFIG) private appConfig: IAppConfig,\n  ) { }\n\n  ngOnInit() {\n    this.isAdmin = this.authService.isAuthUserInRole(\"Admin\");\n    this.isUser = this.authService.isAuthUserInRole(\"User\");\n  }\n\n  callMyProtectedAdminApiController() {\n    this.httpClient\n      .get(`${this.appConfig.apiEndpoint}/MyProtectedAdminApi`)\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      )\n      .subscribe(result => {\n        this.result = result;\n      });\n  }\n\n  callMyProtectedApiController() {\n    this.httpClient\n      .get(`${this.appConfig.apiEndpoint}/MyProtectedApi`)\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      )\n      .subscribe(result => {\n        this.result = result;\n      });\n  }\n\n  callMyProtectedEditorsApiController() {\n    this.httpClient\n      .get(`${this.appConfig.apiEndpoint}/MyProtectedEditorsApi`)\n      .pipe(\n        map(response => response || {}),\n        catchError((error: HttpErrorResponse) => throwError(error))\n      )\n      .subscribe(result => {\n        this.result = result;\n      });\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    <h2 class=\"card-title\">Call protected API</h2>\n  </div>\n  <div class=\"card-body\">\n    <button *ngIf=\"isAdmin\" class=\"btn btn-primary\" (click)=\"callMyProtectedAdminApiController()\">\n      Call [Authorize(Roles = \"Admin\")] API\n    </button>\n\n    <button *ngIf=\"isAdmin || isUser\" class=\"btn btn-default\" (click)=\"callMyProtectedApiController()\">\n      Call [Authorize] API\n    </button>\n\n    <button class=\"btn btn-warning\" (click)=\"callMyProtectedEditorsApiController()\">\n      Call [Authorize(Roles = \"Editor\")] API\n    </button>\n\n    <div *ngIf=\"result\" class=\"highlight\">\n      <pre><code>{{result | json}}</code></pre>\n    </div>\n  </div>\n</div>\n\n<div class=\"top15\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h2 class=\"card-title\">Show/Hide elements using isVisibleForAuthUser directive</h2>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"alert alert-info\" isVisibleForAuthUser>\n        Is-Visible-For-AuthUser\n      </div>\n      <div class=\"alert alert-success\" isVisibleForAuthUser [isVisibleForRoles]=\"['Admin','User']\">\n        Is-Visible-For-Roles = ['Admin','User']\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"top15\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      <h2 class=\"card-title\">Show/Hide elements using *hasAuthUserViewPermission directive</h2>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"alert alert-info\" *hasAuthUserViewPermission=\"\">\n        *hasAuthUserViewPermission=\"\"\n      </div>\n      <div class=\"alert alert-success\" *hasAuthUserViewPermission=\"['Admin','User']\">\n        *hasAuthUserViewPermission=\"['Admin','User']\"\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { catchError, delay, mergeMap, retryWhen, take } from \"rxjs/operators\";\n\nimport { AuthTokenType } from \"./../models/auth-token-type\";\nimport { TokenStoreService } from \"./token-store.service\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  private delayBetweenRetriesMs = 1000;\n  private numberOfRetries = 3;\n  private authorizationHeader = \"Authorization\";\n\n  constructor(\n    private tokenStoreService: TokenStoreService,\n    private router: Router) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const accessToken = this.tokenStoreService.getRawAuthToken(AuthTokenType.AccessToken);\n    if (accessToken) {\n      request = request.clone({\n        headers: request.headers.set(this.authorizationHeader, `Bearer ${accessToken}`)\n      });\n      return next.handle(request).pipe(\n        retryWhen(errors => errors.pipe(\n          mergeMap((error: HttpErrorResponse, retryAttempt: number) => {\n            if (retryAttempt === this.numberOfRetries - 1) {\n              console.log(`HTTP call '${request.method} ${request.url}' failed after ${this.numberOfRetries} retries.`);\n              return throwError(error); // no retry\n            }\n\n            switch (error.status) {\n              case 400:\n              case 404:\n                return throwError(error); // no retry\n            }\n\n            return of(error); // retry\n          }),\n          delay(this.delayBetweenRetriesMs),\n          take(this.numberOfRetries)\n        )),\n        catchError((error: any, caught: Observable<HttpEvent<any>>) => {\n          console.error({ error, caught });\n          if (error.status === 401 || error.status === 403) {\n            const newRequest = this.getNewAuthRequest(request);\n            if (newRequest) {\n              console.log(\"Try new AuthRequest ...\");\n              return next.handle(newRequest);\n            }\n            this.router.navigate([\"/accessDenied\"]);\n          }\n          return throwError(error);\n        })\n      );\n    } else {\n      // login page\n      return next.handle(request);\n    }\n  }\n\n  getNewAuthRequest(request: HttpRequest<any>): HttpRequest<any> | null {\n    const newStoredToken = this.tokenStoreService.getRawAuthToken(AuthTokenType.AccessToken);\n    const requestAccessTokenHeader = request.headers.get(this.authorizationHeader);\n    if (!newStoredToken || !requestAccessTokenHeader) {\n      console.log(\"There is no new AccessToken.\", { requestAccessTokenHeader: requestAccessTokenHeader, newStoredToken: newStoredToken });\n      return null;\n    }\n    const newAccessTokenHeader = `Bearer ${newStoredToken}`;\n    if (requestAccessTokenHeader === newAccessTokenHeader) {\n      console.log(\"There is no new AccessToken.\", { requestAccessTokenHeader: requestAccessTokenHeader, newAccessTokenHeader: newAccessTokenHeader });\n      return null;\n    }\n    return request.clone({ headers: request.headers.set(this.authorizationHeader, newAccessTokenHeader) });\n  }\n}\n","export * from \"./models/auth-guard-permission\";\nexport * from \"./models/auth-token-type\";\nexport * from \"./models/auth-user\";\nexport * from \"./models/credentials\";\n\nexport * from \"./services/api-config.service\";\nexport * from \"./services/app.config\";\nexport * from \"./services/auth.guard\";\nexport * from \"./services/auth.service\";\nexport * from \"./services/browser-storage.service\";\nexport * from \"./services/refresh-token.service\";\nexport * from \"./services/token-store.service\";\nexport * from \"./services/utils.service\";\n","import { Injectable } from \"@angular/core\";\nimport jwt_decode from 'jwt-decode';\n\nimport { AuthTokenType } from \"./../models/auth-token-type\";\nimport { ApiConfigService } from \"./api-config.service\";\nimport { BrowserStorageService } from \"./browser-storage.service\";\nimport { UtilsService } from \"./utils.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStoreService {\n\n  private rememberMeToken = \"rememberMe_token\";\n\n  constructor(\n    private browserStorageService: BrowserStorageService,\n    private utilsService: UtilsService,\n    private apiConfigService: ApiConfigService) { }\n\n  getRawAuthToken(tokenType: AuthTokenType): string {\n    if (this.rememberMe()) {\n      return this.browserStorageService.getLocal(AuthTokenType[tokenType]);\n    } else {\n      return this.browserStorageService.getSession(AuthTokenType[tokenType]);\n    }\n  }\n\n  getDecodedAccessToken(): any {\n    return jwt_decode(this.getRawAuthToken(AuthTokenType.AccessToken));\n  }\n\n  getAuthUserDisplayName(): string {\n    return this.getDecodedAccessToken().DisplayName;\n  }\n\n  getAccessTokenExpirationDateUtc(): Date | null {\n    const decoded = this.getDecodedAccessToken();\n    if (decoded.exp === undefined) {\n      return null;\n    }\n    const date = new Date(0); // The 0 sets the date to the epoch\n    date.setUTCSeconds(decoded.exp);\n    return date;\n  }\n\n  isAccessTokenTokenExpired(): boolean {\n    const expirationDateUtc = this.getAccessTokenExpirationDateUtc();\n    if (!expirationDateUtc) {\n      return true;\n    }\n    return !(expirationDateUtc.valueOf() > new Date().valueOf());\n  }\n\n  deleteAuthTokens() {\n    if (this.rememberMe()) {\n      this.browserStorageService.removeLocal(AuthTokenType[AuthTokenType.AccessToken]);\n      this.browserStorageService.removeLocal(AuthTokenType[AuthTokenType.RefreshToken]);\n    } else {\n      this.browserStorageService.removeSession(AuthTokenType[AuthTokenType.AccessToken]);\n      this.browserStorageService.removeSession(AuthTokenType[AuthTokenType.RefreshToken]);\n    }\n    this.browserStorageService.removeLocal(this.rememberMeToken);\n  }\n\n  setToken(tokenType: AuthTokenType, tokenValue: string): void {\n    if (this.utilsService.isEmptyString(tokenValue)) {\n      console.error(`${AuthTokenType[tokenType]} is null or empty.`);\n    }\n\n    if (tokenType === AuthTokenType.AccessToken && this.utilsService.isEmptyString(tokenValue)) {\n      throw new Error(\"AccessToken can't be null or empty.\");\n    }\n\n    if (this.rememberMe()) {\n      this.browserStorageService.setLocal(AuthTokenType[tokenType], tokenValue);\n    } else {\n      this.browserStorageService.setSession(AuthTokenType[tokenType], tokenValue);\n    }\n  }\n\n  getDecodedTokenRoles(): string[] | null {\n    const decodedToken = this.getDecodedAccessToken();\n    const roles = decodedToken[\"http://schemas.microsoft.com/ws/2008/06/identity/claims/role\"];\n    if (!roles) {\n      return null;\n    }\n\n    if (Array.isArray(roles)) {\n      return roles.map(role => role.toLowerCase());\n    } else {\n      return [roles.toLowerCase()];\n    }\n  }\n\n  storeLoginSession(response: any): void {\n    this.setToken(AuthTokenType.AccessToken, response[this.apiConfigService.configuration.accessTokenObjectKey]);\n    this.setToken(AuthTokenType.RefreshToken, response[this.apiConfigService.configuration.refreshTokenObjectKey]);\n  }\n\n  rememberMe(): boolean {\n    return this.browserStorageService.getLocal(this.rememberMeToken) === true;\n  }\n\n  setRememberMe(value: boolean): void {\n    this.browserStorageService.setLocal(this.rememberMeToken, value);\n  }\n\n  hasStoredAccessAndRefreshTokens(): boolean {\n    const accessToken = this.getRawAuthToken(AuthTokenType.AccessToken);\n    const refreshToken = this.getRawAuthToken(AuthTokenType.RefreshToken);\n    return !this.utilsService.isEmptyString(accessToken) && !this.utilsService.isEmptyString(refreshToken);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AuthGuard, AuthGuardPermission } from \"@app/core\";\n\nimport { AccessDeniedComponent } from \"./access-denied/access-denied.component\";\nimport { ChangePasswordComponent } from \"./change-password/change-password.component\";\nimport { LoginComponent } from \"./login/login.component\";\n\nconst routes: Routes = [\n  { path: \"login\", component: LoginComponent },\n  { path: \"accessDenied\", component: AccessDeniedComponent },\n  {\n    path: \"changePassword\", component: ChangePasswordComponent,\n    data: {\n      permission: {\n        permittedRoles: [\"Admin\", \"User\"]\n      } as AuthGuardPermission\n    },\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { Injectable } from \"@angular/core\";\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiConfigService {\n\n  private config: IApiConfig | null = null;\n\n  constructor() { }\n\n  loadApiConfig(): any {\n    this.config = {\n      loginPath: \"asrar/dashboard/login\",\n      adminRoleName: \"admin\",\n      accessTokenObjectKey: \"accessToken\",\n      refreshTokenObjectKey: \"refreshToken\",\n\n    } as IApiConfig;\n    return this.config;\n\n\n\n    // const http = this.injector.get<HttpClient>(HttpClient);\n    // const url = `${this.appConfig.apiEndpoint}/${this.appConfig.apiSettingsPath}`;\n    // return http.get<IApiConfig>(url)\n    //   .toPromise()\n    //   .then(config => {\n    //     this.config = config;\n    //     console.log(\"ApiConfig\", this.config);\n    //   })\n    //   .catch(err => {\n    //     console.error(`Failed to loadApiConfig(). Make sure ${url} is accessible.`, this.config);\n    //     return Promise.reject(err);\n    //   });\n  }\n\n  get configuration(): IApiConfig {\n    if (!this.config) {\n      throw new Error(\"Attempted to access configuration property before configuration data was loaded.\");\n    }\n    return this.config;\n  }\n}\n\nexport interface IApiConfig {\n  loginPath: string;\n  logoutPath: string;\n  refreshTokenPath: string;\n  accessTokenObjectKey: string;\n  refreshTokenObjectKey: string;\n  adminRoleName: string;\n}\n","import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { AuthService, Credentials } from \"@app/core\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"]\n})\nexport class LoginComponent implements OnInit {\n\n  model: Credentials = { username: \"\", password: \"\", rememberMe: false };\n  error = \"\";\n  returnUrl: string | null = null;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // reset the login status\n    this.authService.logout(false);\n\n    // get the return url from route parameters\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"];\n  }\n\n  submitForm(form: NgForm) {\n    console.log(form);\n\n    this.error = \"\";\n    this.authService.login(this.model)\n      .subscribe(isLoggedIn => {\n        if (isLoggedIn) {\n          if (this.returnUrl) {\n            this.router.navigate([this.returnUrl]);\n          } else {\n            this.router.navigate([\"/protectedPage\"]);\n          }\n        }\n      },\n        (error: HttpErrorResponse) => {\n          console.error(\"Login error\", error);\n          if (error.status === 401) {\n            this.error = \"Invalid User name or Password. Please try again.\";\n          } else {\n            this.error = `${error.statusText}: ${error.message}`;\n          }\n        });\n  }\n}\n","<section class=\"hero\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"columns is-centered\">\n        <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n          <form #form=\"ngForm\" (submit)=\"submitForm(form)\" class=\"box\">\n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Username</label>\n              <div class=\"control has-icons-left\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Put something\"\n                  class=\"input\"\n                  required\n                  name=\"username\"\n                  [(ngModel)]=\"model.username\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-envelope\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Password</label>\n              <div class=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  placeholder=\"*******\"\n                  class=\"input\"\n                  required\n                  name=\"password\"\n                  [(ngModel)]=\"model.password\"\n                />\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-lock\"></i>\n                </span>\n              </div>\n            </div>\n\n            <div class=\"field\">\n              <button type=\"submit\" class=\"button is-success\">Login</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { APP_CONFIG } from './app.config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IAppConfig } from '@app/core';\r\nimport { Injectable, Inject } from \"@angular/core\";\r\n\r\nimport { DashboardSummaryResponseModel } from './../models/dashboard-info';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DashboardService {\r\n\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject(APP_CONFIG) private appConfig: IAppConfig\r\n\r\n  ) { }\r\n\r\n  loadDashboard() {\r\n    const url = `${this.appConfig.apiEndpoint}/${this.appConfig.dashboardEndPoint}`;\r\n    return this.http.get<DashboardSummaryResponseModel>(url);\r\n  }\r\n}\r\n","import { CommonModule } from \"@angular/common\";\nimport { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { HeaderComponent } from \"./component/header/header.component\";\nimport { ApiConfigService } from \"./services/api-config.service\";\nimport { APP_CONFIG, AppConfig } from \"./services/app.config\";\nimport { AuthInterceptor } from \"./services/auth.interceptor\";\nimport { XsrfInterceptor } from \"./services/xsrf.interceptor\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  exports: [\n    // components that are used in app.component.ts will be listed here.\n    HeaderComponent\n  ],\n  declarations: [\n    // components that are used in app.component.ts will be listed here.\n    HeaderComponent\n  ],\n\n  providers: [\n    /* ``No`` global singleton services of the whole app should be listed here anymore!\n       Since they'll be already provided in AppModule using the `tree-shakable providers` of Angular 6.x+ (providedIn: 'root').\n       This new feature allows cleaning up the providers section from the CoreModule.\n       But if you want to provide something with an InjectionToken other that its class, you still have to use this section.\n    */\n    {\n      provide: APP_CONFIG,\n      useValue: AppConfig\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: XsrfInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (config: ApiConfigService) => () => config.loadApiConfig(),\n      deps: [ApiConfigService],\n      multi: true\n    }\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error(\"CoreModule should be imported ONLY in AppModule.\");\n    }\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-page-not-found\",\n  templateUrl: \"./page-not-found.component.html\",\n  styleUrls: [\"./page-not-found.component.css\"]\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>سی کارمون، راحتو گم کردی.</p>\n","import { DashboardSummaryResponseModel } from './../../core/models/dashboard-info';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable, timer } from 'rxjs';\nimport { take, map } from 'rxjs/operators';\nimport { TokenStoreService } from \"@app/core\";\nimport { DashboardService } from '@app/core/services/dashboard.service';\n\n@Component({\n  selector: \"app-protected-page\",\n  templateUrl: \"./protected-page.component.html\",\n  styleUrls: [\"./protected-page.component.css\"]\n})\nexport class ProtectedPageComponent implements OnInit {\n\n  decodedAccessToken: any = {};\n  accessTokenExpirationDate: Date | null = null;\n  private count = 60;\n\n  dashboardModel = <DashboardSummaryResponseModel>{};\n\n  isLoading = false;\n  updatedDateTime: Date | null = null;\n  autoRefreshcounter: Observable<number> | null = null;\n  jsonViewerData = {} as any;\n  dadJoke = '';\n\n  constructor(private tokenStoreService: TokenStoreService, private dashboardService: DashboardService) {\n\n\n  }\n\n\n\n  async ngOnInit() {\n    this.decodedAccessToken = this.tokenStoreService.getDecodedAccessToken();\n    this.accessTokenExpirationDate = this.tokenStoreService.getAccessTokenExpirationDateUtc();\n    this.refreshData();\n\n    setInterval(() => {\n      this.refreshData();\n    }, 1 * 60 * 1000);\n\n  }\n\n\n\n  private startTimer() {\n    this.count = 60;\n    this.autoRefreshcounter = timer(0, 1000).pipe(\n      take(this.count),\n      map(() => --this.count)\n    );\n  }\n  refreshData() {\n\n    this.isLoading = true;\n    this.dashboardService.loadDashboard().subscribe(result => {\n      this.dashboardModel = result;\n      this.isLoading = false;\n      this.updatedDateTime = new Date();\n      this.startTimer();\n    });\n\n    // this.queueManagerApiService.dadJoke().subscribe(result => {\n    //   this.dadJoke = result.joke;\n    // });\n\n  }\n\n\n}\n","<article class=\"message is-info\">\n  <div class=\"message-header\">\n    <p>سلام بورک.</p>\n  </div>\n  <div class=\"message-body\">\n    <div class=\"columns\">\n      <div class=\"column\">\n        <a *ngIf=\"isLoading\" class=\"button is-success is-loading\">وایسا ...</a>\n      </div>\n\n      <div class=\"column\">\n        <div *ngIf=\"!isLoading\">\n          <div class=\"buttons\">\n            <button (click)=\"refreshData()\" class=\"button is-info\">\n              نمی تونم {{ autoRefreshcounter | async }} ثانیه دیگه امون بدم.\n              دوباره رفرش کن.\n            </button>\n            <button class=\"button is-text\"></button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"columns\">\n      <div class=\"column\">\n        <span>{{ dadJoke }}</span>\n      </div>\n    </div>\n  </div>\n</article>\n\n<div class=\"tile is-ancestor\">\n  <div class=\"tile is-parent\">\n    <article class=\"tile is-child notification is-info\">\n      <p class=\"title\">{{ dashboardModel.totalUsersCount }}</p>\n      <p class=\"subtitle\">تعداد کاربر</p>\n    </article>\n  </div>\n\n  <div class=\"tile is-parent\">\n    <article class=\"tile is-child notification\">\n      <p class=\"title\">\n        {{ dashboardModel.totalDonakCount }}\n      </p>\n      <p class=\"subtitle\">جمع کل دنکا</p>\n    </article>\n  </div>\n  <div class=\"tile is-parent\">\n    <article class=\"tile is-child notification is-primary\">\n      <p class=\"title\">\n        {{ dashboardModel.todayActiveUsersCount }}\n      </p>\n      <p class=\"subtitle\">کاربرای فعال امروز</p>\n    </article>\n  </div>\n  <div class=\"tile is-parent\">\n    <article class=\"tile is-child notification is-warning\">\n      <p class=\"title\">\n        {{ dashboardModel.todayEarnedDonakCounts }}\n      </p>\n      <p class=\"subtitle\">جمع دنکای امروز</p>\n    </article>\n  </div>\n  <div class=\"tile is-parent\">\n    <article class=\"tile is-child notification is-success\">\n      <p class=\"title\">\n        {{ dashboardModel.todaySuccessfulTransactionsCount }}\n      </p>\n      <p class=\"subtitle\">خرید موفق امروز</p>\n    </article>\n  </div>\n\n  <div class=\"tile is-parent\">\n    <article class=\"tile is-child box\">\n      <p class=\"title has-text-info\">\n        {{ dashboardModel.todayNewUsersCount }}\n      </p>\n      <p class=\"subtitle has-text-info\">تعداد ثبت نامیای امروز</p>\n    </article>\n  </div>\n</div>\n\n<div class=\"columns\">\n  <article class=\"panel is-primary column\">\n    <p class=\"panel-heading\">کاربرا</p>\n    <div class=\"panel-block\">\n      <table class=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th>نمره</th>\n            <th>آخرین ورود</th>\n            <th>دخول به سیستم</th>\n            <th>تعداد تراکنشا</th>\n            <th>جمع دنکا</th>\n          </tr>\n        </thead>\n        <tfoot></tfoot>\n        <tbody>\n          <tr *ngFor=\"let item of dashboardModel.users\">\n            <td>\n              {{ item.mobileNumber }}\n            </td>\n\n            <td>\n              <span class=\"tag is-info is-light\">\n                {{ item.lastActiveDateString }}\n              </span>\n            </td>\n\n            <td>\n              <span class=\"tag is-info is-light\">{{\n                item.signUpDateString\n              }}</span>\n            </td>\n            <td>\n              <span class=\"tag is-success is-light\">\n                {{ item.transactionsCount }}\n              </span>\n            </td>\n\n            <td>\n              <span class=\"tag is-success is-light\">\n                {{ item.donakCount }}\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n\n  <article class=\"panel is-info column\">\n    <p class=\"panel-heading\">خریدا</p>\n\n    <div class=\"panel-block\">\n      <table class=\"table is-fullwidth\">\n        <thead>\n          <tr>\n            <th>قیمت به تومن</th>\n            <th>تاریخ</th>\n            <th>تعداد دنک</th>\n            <th>توسط</th>\n          </tr>\n        </thead>\n        <tfoot></tfoot>\n        <tbody>\n          <tr *ngFor=\"let item of dashboardModel.transactions\">\n            <td>\n              {{ item.amountTooman }}\n            </td>\n\n            <td>\n              <span class=\"tag is-info is-light\">\n                {{ item.creationDateString }}\n              </span>\n            </td>\n\n            <td>\n              <span class=\"tag is-success is-light\">\n                {{ item.gainedDonakCount }}</span\n              >\n            </td>\n\n            <td>\n              {{ item.username }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </article>\n</div>\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { PageNotFoundComponent } from \"./page-not-found/page-not-found.component\";\nimport { WelcomeComponent } from \"./welcome/welcome.component\";\n\nconst routes: Routes = [\n  { path: \"welcome\", component: WelcomeComponent },\n  { path: \"\", redirectTo: \"welcome\", pathMatch: \"full\" },\n  { path: \"**\", component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}